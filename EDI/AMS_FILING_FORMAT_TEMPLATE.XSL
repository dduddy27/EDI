<?xml version = '1.0' encoding = 'utf-8'?>
<!--Generated by Oracle BI Publisher 10.1.3.4.1-->
<!--xslt1.0-compatibility-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:ora="http://www.oracle.com/XSL/Transform/java/" xmlns:xdofo="http://xmlns.oracle.com/oxp/fo/extensions" xmlns:xdoxslt="http://www.oracle.com/XSL/Transform/java/oracle.apps.xdo.template.rtf.XSLTFunctions" xmlns:xdoxliff="urn:oasis:names:tc:xliff:document:1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:OutBoundPayments="http://xmlns.oracle.com/iby/EFTTemplateSample" xmlns:General="http://xmlns.oracle.com/iby" xmlns:Address="http://xmlns.oracle.com/iby/address" xmlns:PaymentsCommon="http://xmlns.oracle.com/iby/PaymentsCommon" xmlns:xdoeft="http://xmlns.oracle.com/iby/xdoeft">
   <xsl:output method="text" encoding="Iso-8859-1"/>
   <xsl:param name="_XDOCTX">#</xsl:param>
   <xsl:decimal-format name="_DECIMALFORMAT" grouping-separator="," decimal-separator="."/>
   <xsl:template match="/">
      <!--Startup: Init Record Counters-->
      <xsl:call-template name="_RECORDCOUNTER"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGE', string(''))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGETEMPLATES', string(''))"/>
      <!--Control: ================ Start new level: AMS=================-->
      <xsl:for-each select=".//AMS" xdoeft:type="LEVEL" xdoeft:level-name="AMS">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1', string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1L', number(0))"/>
         <!--Control: ===== START RECORD: ISA =====-->
         <!--Render: -->
         <xsl:call-template name="L1R1P3S0"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P3S0'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S1"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S1'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P2S2"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P2S2'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S3"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S3'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P10S4"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P10S4'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S5"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S5'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P2S6"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P2S6'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S7"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S7'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P10S8"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P10S8'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S9"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S9'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P2S10"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P2S10'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S11"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S11'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P15S12"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P15S12'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S13"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S13'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P2S14"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P2S14'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S15"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S15'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P15S16"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P15S16'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S17"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S17'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P2S18"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P2S18'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P2S19"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P2S19'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P2S20"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P2S20'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S21"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S21'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P2S22"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P2S22'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P2S23"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P2S23'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S24"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S24'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S25"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S25'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S26"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S26'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P5S27"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P5S27'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S28"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S28'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P9S29"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P9S29'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S30"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S30'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S31"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S31'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S32"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S32'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S33"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S33'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S34"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S34'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S35"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S35'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R1')"/>
         <!--Control: ===== END RECORD: ISA =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: ISA-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'ISA_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2', string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L', number(0))"/>
         <!--Control: ===== START RECORD: GS =====-->
         <!--Render: -->
         <xsl:call-template name="L1R2P2S36"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P2S36'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S37"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S37'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P2S38"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P2S38'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S39"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S39'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P15S40"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S40'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S41"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S41'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P15S42"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S42'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S43"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S43'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P4S44"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P4S44'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P2S45"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P2S45'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P2S46"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P2S46'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S47"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S47'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P2S48"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P2S48'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P2S49"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P2S49'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S50"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S50'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P9S51"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P9S51'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S52"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S52'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S53"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S53'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S54"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S54'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P6S55"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P6S55'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R2')"/>
         <!--Control: ===== END RECORD: GS =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: GS-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'GS_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3', string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L', number(0))"/>
         <!--Control: ===== START RECORD: ST =====-->
         <!--Render: -->
         <xsl:call-template name="L1R3P2S56"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P2S56'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S57"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S57'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P3S58"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P3S58'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S59"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S59'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P9S60"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P9S60'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S61"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S61'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S62"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S62'))"/>
         <!--Control: ================ Start new level: LIST_GTM_SHIPMENT=================-->
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R3')"/>
         <!--Control: ===== END RECORD: ST =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: ST-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'ST_RC')"/>
         <xsl:for-each select=".//LIST_GTM_SHIPMENT" xdoeft:type="LEVEL" xdoeft:level-name="LIST_GTM_SHIPMENT">
            <!--Control: ================ Start new level: GTM_SHIPMENT=================-->
            <xsl:for-each select=".//GTM_SHIPMENT" xdoeft:type="LEVEL" xdoeft:level-name="GTM_SHIPMENT">
               <!--Definition: STSESequence-->
               <xsl:call-template name="SEQ_MAX_STSESequence"/>
               <xsl:call-template name="SEQ_START_STSESequence"/>
               <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('STSESequence'), number(1), number(xdoxslt:get_variable($_XDOCTX, 'SEQ_MAX_STSESequence_V')), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_STSESequence_V'), number(1))"/>
               <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4', string(''))"/>
               <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4L', number(0))"/>
               <!--Control: ===== START RECORD: M10 =====-->
               <!--Render: -->
               <xsl:call-template name="L3R4P3S63"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P3S63'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S64"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S64'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P4S65"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P4S65'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S66"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S66'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S67"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S67'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S68"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S68'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P2S69"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P2S69'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S70"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S70'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P7S71"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P7S71'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S72"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S72'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P28S73"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P28S73'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S74"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S74'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P10S75"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P10S75'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S76"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S76'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P30S77"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P30S77'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S78"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S78'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S79"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S79'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S80"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S80'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S81"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S81'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S82"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S82'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S83"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S83'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P1S84"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P1S84'))"/>
               <!--Render: -->
               <xsl:call-template name="L3R4P30S85"/>
               <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R4', xdoxslt:get_variable($_XDOCTX, 'L3R4P30S85'))"/>
               <!--Control: ================ Start new level: LIST_OTM_LOCATION=================-->
               <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L3R4')"/>
               <!--Control: ===== END RECORD: M10 =====-->
               <!--Control: ===== Record Break =====-->
               <xsl:call-template name="_RECORDBREAK"/>
               <!--Control: Increase record counter: M10-->
               <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'M10_RC')"/>
               <xsl:for-each select=".//LIST_OTM_LOCATION" xdoeft:type="LEVEL" xdoeft:level-name="LIST_OTM_LOCATION">
                  <!--Control: ================ Start new level: OTM_LOCATION=================-->
                  <xsl:for-each select=".//OTM_LOCATION" xdoeft:type="LEVEL" xdoeft:level-name="OTM_LOCATION">
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R5', string(''))"/>
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R5L', number(0))"/>
                     <!--Control: ===== START RECORD: P4 =====-->
                     <!--Render: -->
                     <xsl:call-template name="L5R5P3S86"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R5', xdoxslt:get_variable($_XDOCTX, 'L5R5P3S86'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R5P1S87"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R5', xdoxslt:get_variable($_XDOCTX, 'L5R5P1S87'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R5P5S88"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R5', xdoxslt:get_variable($_XDOCTX, 'L5R5P5S88'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R5P1S89"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R5', xdoxslt:get_variable($_XDOCTX, 'L5R5P1S89'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R5P10S90"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R5', xdoxslt:get_variable($_XDOCTX, 'L5R5P10S90'))"/>
                     <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L5R5')"/>
                     <!--Control: ===== END RECORD: P4 =====-->
                     <!--Control: ===== Record Break =====-->
                     <xsl:call-template name="_RECORDBREAK"/>
                     <!--Control: Increase record counter: P4-->
                     <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'P4_RC')"/>
                  </xsl:for-each>
               </xsl:for-each>
               <!--Definition: LXSequence-->
               <xsl:call-template name="SEQ_MAX_LXSequence"/>
               <xsl:call-template name="SEQ_START_LXSequence"/>
               <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('LXSequence'), number(1), number(xdoxslt:get_variable($_XDOCTX, 'SEQ_MAX_LXSequence_V')), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_LXSequence_V'), number(1))"/>
               <!--Control: ================ Start new level: LX_SEQUENCE=================-->
               <xsl:for-each select=".//LX_SEQUENCE" xdoeft:type="LEVEL" xdoeft:level-name="LX_SEQUENCE">
                  <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L4R6', string(''))"/>
                  <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L4R6L', number(0))"/>
                  <!--Control: ===== START RECORD: LX =====-->
                  <!--Render: -->
                  <xsl:call-template name="L4R6P2S91"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L4R6', xdoxslt:get_variable($_XDOCTX, 'L4R6P2S91'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L4R6P1S92"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L4R6', xdoxslt:get_variable($_XDOCTX, 'L4R6P1S92'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L4R6P10S93"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L4R6', xdoxslt:get_variable($_XDOCTX, 'L4R6P10S93'))"/>
                  <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L4R6')"/>
                  <!--Control: ===== END RECORD: LX =====-->
                  <!--Control: ===== Record Break =====-->
                  <xsl:call-template name="_RECORDBREAK"/>
                  <!--Control: Increase record counter: LX-->
                  <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'LX_RC')"/>
                  <!--Control: Increase sequence number 'LXSequence', level: 12-->
                  <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'LXSequence')"/>
               </xsl:for-each>
               <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7', string(''))"/>
               <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7L', number(0))"/>
               <!--Control: ===== START RECORD: M13 =====-->
               <xsl:call-template name="COND_v298"/>
               <!--Check Condition: COND_v298-->
               <xsl:if test="boolean(xdoxslt:get_variable($_XDOCTX, 'COND_v298_V'))" xdoeft:type="DISPLAY CONDITION">
                  <!--Render: -->
                  <xsl:call-template name="L3R7P3S94"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P3S94'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P1S95"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P1S95'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P4S96"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P4S96'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P1S97"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P1S97'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P4S98"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P4S98'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P1S99"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P1S99'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P1S100"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P1S100'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P1S101"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P1S101'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P12S102"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P12S102'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P1S103"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P1S103'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P15S104"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P15S104'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P1S105"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P1S105'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P2S106"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P2S106'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P1S107"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P1S107'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P1S108"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P1S108'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P1S109"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P1S109'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R7P4S110"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R7', xdoxslt:get_variable($_XDOCTX, 'L3R7P4S110'))"/>
                  <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L3R7')"/>
                  <!--Control: ===== END RECORD: M13 =====-->
                  <!--Control: ===== Record Break =====-->
                  <xsl:call-template name="_RECORDBREAK"/>
                  <!--Control: Increase record counter: M13-->
                  <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'M13_RC')"/>
               </xsl:if>
               <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8', string(''))"/>
               <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8L', number(0))"/>
               <!--Control: ===== START RECORD: M11 =====-->
               <xsl:call-template name="COND_v356"/>
               <!--Check Condition: COND_v356-->
               <xsl:if test="boolean(xdoxslt:get_variable($_XDOCTX, 'COND_v356_V'))" xdoeft:type="DISPLAY CONDITION">
                  <!--Render: -->
                  <xsl:call-template name="L3R8P3S111"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P3S111'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S112"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S112'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P12S113"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P12S113'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S114"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S114'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P5S115"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P5S115'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S116"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S116'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P15S117"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P15S117'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S118"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S118'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P3S119"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P3S119'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S120"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S120'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P10S121"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P10S121'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S122"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S122'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S123"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S123'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S124"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S124'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P8S125"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P8S125'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S126"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S126'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S127"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S127'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S128"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S128'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P2S129"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P2S129'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S130"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S130'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P17S131"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P17S131'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S132"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S132'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S133"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S133'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P4S134"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P4S134'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S135"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S135'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S136"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S136'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P4S137"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P4S137'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S138"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S138'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P4S139"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P4S139'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S140"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S140'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S141"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S141'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S142"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S142'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S143"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S143'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S144"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S144'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P30S145"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P30S145'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S146"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S146'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P30S147"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P30S147'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S148"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S148'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S149"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S149'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R8P1S150"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R8', xdoxslt:get_variable($_XDOCTX, 'L3R8P1S150'))"/>
                  <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L3R8')"/>
                  <!--Control: ===== END RECORD: M11 =====-->
                  <!--Control: ===== Record Break =====-->
                  <xsl:call-template name="_RECORDBREAK"/>
                  <!--Control: Increase record counter: M11-->
                  <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'M11_RC')"/>
               </xsl:if>
               <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9', string(''))"/>
               <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9L', number(0))"/>
               <!--Control: ===== START RECORD: N9 =====-->
               <xsl:call-template name="COND_v488"/>
               <!--Check Condition: COND_v488-->
               <xsl:if test="boolean(xdoxslt:get_variable($_XDOCTX, 'COND_v488_V'))" xdoeft:type="DISPLAY CONDITION">
                  <!--Render: -->
                  <xsl:call-template name="L3R9P2S151"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P2S151'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S152"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S152'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P3S153"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P3S153'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S154"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S154'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P30S155"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P30S155'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S156"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S156'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S157"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S157'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S158"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S158'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S159"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S159'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S160"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S160'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S161"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S161'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S162"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S162'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S163"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S163'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S164"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S164'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S165"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S165'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R9P1S166"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R9', xdoxslt:get_variable($_XDOCTX, 'L3R9P1S166'))"/>
                  <!--Control: ================ Start new level: LIST_GTM_N1_GROUP=================-->
                  <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L3R9')"/>
                  <!--Control: ===== END RECORD: N9 =====-->
                  <!--Control: ===== Record Break =====-->
                  <xsl:call-template name="_RECORDBREAK"/>
                  <!--Control: Increase record counter: N9-->
                  <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'N9_RC')"/>
               </xsl:if>
               <xsl:for-each select=".//LIST_GTM_N1_GROUP" xdoeft:type="LEVEL" xdoeft:level-name="LIST_GTM_N1_GROUP">
                  <!--Control: ================ Start new level: GTM_N1_GROUP=================-->
                  <xsl:for-each select=".//GTM_N1_GROUP" xdoeft:type="LEVEL" xdoeft:level-name="GTM_N1_GROUP">
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R10', string(''))"/>
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R10L', number(0))"/>
                     <!--Control: ===== START RECORD: N1 =====-->
                     <xsl:call-template name="COND_v541"/>
                     <!--Check Condition: COND_v541-->
                     <xsl:if test="boolean(xdoxslt:get_variable($_XDOCTX, 'COND_v541_V'))" xdoeft:type="DISPLAY CONDITION">
                        <!--Render: -->
                        <xsl:call-template name="L5R10P2S167"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R10', xdoxslt:get_variable($_XDOCTX, 'L5R10P2S167'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R10P1S168"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R10', xdoxslt:get_variable($_XDOCTX, 'L5R10P1S168'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R10P3S169"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R10', xdoxslt:get_variable($_XDOCTX, 'L5R10P3S169'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R10P1S170"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R10', xdoxslt:get_variable($_XDOCTX, 'L5R10P1S170'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R10P60S171"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R10', xdoxslt:get_variable($_XDOCTX, 'L5R10P60S171'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R10P1S172"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R10', xdoxslt:get_variable($_XDOCTX, 'L5R10P1S172'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R10P2S173"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R10', xdoxslt:get_variable($_XDOCTX, 'L5R10P2S173'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R10P1S174"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R10', xdoxslt:get_variable($_XDOCTX, 'L5R10P1S174'))"/>
                        <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L5R10')"/>
                        <!--Control: ===== END RECORD: N1 =====-->
                        <!--Control: ===== Record Break =====-->
                        <xsl:call-template name="_RECORDBREAK"/>
                        <!--Control: Increase record counter: N1-->
                        <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'N1_RC')"/>
                     </xsl:if>
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R11', string(''))"/>
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R11L', number(0))"/>
                     <!--Control: ===== START RECORD: N3 =====-->
                     <xsl:call-template name="COND_v569"/>
                     <!--Check Condition: COND_v569-->
                     <xsl:if test="boolean(xdoxslt:get_variable($_XDOCTX, 'COND_v569_V'))" xdoeft:type="DISPLAY CONDITION">
                        <!--Render: -->
                        <xsl:call-template name="L5R11P2S175"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R11', xdoxslt:get_variable($_XDOCTX, 'L5R11P2S175'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R11P1S176"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R11', xdoxslt:get_variable($_XDOCTX, 'L5R11P1S176'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R11P55S177"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R11', xdoxslt:get_variable($_XDOCTX, 'L5R11P55S177'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R11P1S178"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R11', xdoxslt:get_variable($_XDOCTX, 'L5R11P1S178'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R11P55S179"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R11', xdoxslt:get_variable($_XDOCTX, 'L5R11P55S179'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R11P1S180"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R11', xdoxslt:get_variable($_XDOCTX, 'L5R11P1S180'))"/>
                        <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L5R11')"/>
                        <!--Control: ===== END RECORD: N3 =====-->
                        <!--Control: ===== Record Break =====-->
                        <xsl:call-template name="_RECORDBREAK"/>
                        <!--Control: Increase record counter: N3-->
                        <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'N3_RC')"/>
                     </xsl:if>
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12', string(''))"/>
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12L', number(0))"/>
                     <!--Control: ===== START RECORD: N4 =====-->
                     <!--Render: -->
                     <xsl:call-template name="L5R12P2S181"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R12', xdoxslt:get_variable($_XDOCTX, 'L5R12P2S181'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R12P1S182"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R12', xdoxslt:get_variable($_XDOCTX, 'L5R12P1S182'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R12P30S183"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R12', xdoxslt:get_variable($_XDOCTX, 'L5R12P30S183'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R12P1S184"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R12', xdoxslt:get_variable($_XDOCTX, 'L5R12P1S184'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R12P2S185"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R12', xdoxslt:get_variable($_XDOCTX, 'L5R12P2S185'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R12P1S186"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R12', xdoxslt:get_variable($_XDOCTX, 'L5R12P1S186'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R12P15S187"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R12', xdoxslt:get_variable($_XDOCTX, 'L5R12P15S187'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R12P1S188"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R12', xdoxslt:get_variable($_XDOCTX, 'L5R12P1S188'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R12P3S189"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R12', xdoxslt:get_variable($_XDOCTX, 'L5R12P3S189'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R12P1S190"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R12', xdoxslt:get_variable($_XDOCTX, 'L5R12P1S190'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R12P1S191"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R12', xdoxslt:get_variable($_XDOCTX, 'L5R12P1S191'))"/>
                     <!--Render: -->
                     <xsl:call-template name="L5R12P1S192"/>
                     <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R12', xdoxslt:get_variable($_XDOCTX, 'L5R12P1S192'))"/>
                     <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L5R12')"/>
                     <!--Control: ===== END RECORD: N4 =====-->
                     <!--Control: ===== Record Break =====-->
                     <xsl:call-template name="_RECORDBREAK"/>
                     <!--Control: Increase record counter: N4-->
                     <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'N4_RC')"/>
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13', string(''))"/>
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13L', number(0))"/>
                     <!--Control: ===== START RECORD: PER =====-->
                     <xsl:call-template name="COND_v632"/>
                     <!--Check Condition: COND_v632-->
                     <xsl:if test="boolean(xdoxslt:get_variable($_XDOCTX, 'COND_v632_V'))" xdoeft:type="DISPLAY CONDITION">
                        <!--Render: -->
                        <xsl:call-template name="L5R13P3S193"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P3S193'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P1S194"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P1S194'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P2S195"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P2S195'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P1S196"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P1S196'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P23S197"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P23S197'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P1S198"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P1S198'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P2S199"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P2S199'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P1S200"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P1S200'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P80S201"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P80S201'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P1S202"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P1S202'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P2S203"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P2S203'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P1S204"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P1S204'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P80S205"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P80S205'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P1S206"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P1S206'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P1S207"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P1S207'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P1S208"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P1S208'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R13P1S209"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R13', xdoxslt:get_variable($_XDOCTX, 'L5R13P1S209'))"/>
                        <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L5R13')"/>
                        <!--Control: ===== END RECORD: PER =====-->
                        <!--Control: ===== Record Break =====-->
                        <xsl:call-template name="_RECORDBREAK"/>
                        <!--Control: Increase record counter: PER-->
                        <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'PER_RC')"/>
                     </xsl:if>
                  </xsl:for-each>
               </xsl:for-each>
               <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14', string(''))"/>
               <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14L', number(0))"/>
               <!--Control: ===== START RECORD: M12 =====-->
               <xsl:call-template name="COND_v686"/>
               <!--Check Condition: COND_v686-->
               <xsl:if test="boolean(xdoxslt:get_variable($_XDOCTX, 'COND_v686_V'))" xdoeft:type="DISPLAY CONDITION">
                  <!--Render: -->
                  <xsl:call-template name="L3R14P3S210"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P3S210'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S211"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S211'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P2S212"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P2S212'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S213"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S213'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P14S214"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P14S214'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S215"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S215'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P30S216"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P30S216'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S217"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S217'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P30S218"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P30S218'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S219"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S219'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P8S220"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P8S220'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S221"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S221'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P9S222"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P9S222'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S223"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S223'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P4S224"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P4S224'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S225"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S225'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P2S226"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P2S226'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S227"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S227'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P12S228"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P12S228'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S229"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S229'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P2S230"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P2S230'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S231"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S231'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P28S232"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P28S232'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S233"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S233'))"/>
                  <!--Render: -->
                  <xsl:call-template name="L3R14P1S234"/>
                  <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L3R14', xdoxslt:get_variable($_XDOCTX, 'L3R14P1S234'))"/>
                  <!--Control: ================ Start new level: LIST_GTM_VID_GROUP=================-->
                  <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L3R14')"/>
                  <!--Control: ===== END RECORD: M12 =====-->
                  <!--Control: ===== Record Break =====-->
                  <xsl:call-template name="_RECORDBREAK"/>
                  <!--Control: Increase record counter: M12-->
                  <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'M12_RC')"/>
               </xsl:if>
               <xsl:for-each select=".//LIST_GTM_VID_GROUP" xdoeft:type="LEVEL" xdoeft:level-name="LIST_GTM_VID_GROUP">
                  <!--Control: ================ Start new level: GTM_VID_GROUP=================-->
                  <xsl:for-each select=".//GTM_VID_GROUP" xdoeft:type="LEVEL" xdoeft:level-name="GTM_VID_GROUP">
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15', string(''))"/>
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15L', number(0))"/>
                     <!--Control: ===== START RECORD: VID =====-->
                     <xsl:call-template name="COND_v765"/>
                     <!--Check Condition: COND_v765-->
                     <xsl:if test="boolean(xdoxslt:get_variable($_XDOCTX, 'COND_v765_V'))" xdoeft:type="DISPLAY CONDITION">
                        <!--Render: -->
                        <xsl:call-template name="L5R15P3S235"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P3S235'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P1S236"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P1S236'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P2S237"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P2S237'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P1S238"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P1S238'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P4S239"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P4S239'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P1S240"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P1S240'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P10S241"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P10S241'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P1S242"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P1S242'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P15S243"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P15S243'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P1S244"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P1S244'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P15S245"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P15S245'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P1S246"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P1S246'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P4S247"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P4S247'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P1S248"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P1S248'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P1S249"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P1S249'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P1S250"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P1S250'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P1S251"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P1S251'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P1S252"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P1S252'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P4S253"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P4S253'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P15S254"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P15S254'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R15P2S255"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R15', xdoxslt:get_variable($_XDOCTX, 'L5R15P2S255'))"/>
                        <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L5R15')"/>
                        <!--Control: ===== END RECORD: VID =====-->
                        <!--Control: ===== Record Break =====-->
                        <xsl:call-template name="_RECORDBREAK"/>
                        <!--Control: Increase record counter: VID-->
                        <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'VID_RC')"/>
                     </xsl:if>
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16', string(''))"/>
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16L', number(0))"/>
                     <!--Control: ===== START RECORD: N10 =====-->
                     <xsl:call-template name="COND_v836"/>
                     <!--Check Condition: COND_v836-->
                     <xsl:if test="boolean(xdoxslt:get_variable($_XDOCTX, 'COND_v836_V'))" xdoeft:type="DISPLAY CONDITION">
                        <!--Render: -->
                        <xsl:call-template name="L5R16P-1S256"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P-1S256'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S257"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S257'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P10S258"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P10S258'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S259"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S259'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P45S260"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P45S260'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S261"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S261'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P48S262"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P48S262'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S263"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S263'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S264"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S264'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S265"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S265'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P30S266"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P30S266'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S267"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S267'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P8S268"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P8S268'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S269"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S269'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S270"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S270'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S271"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S271'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P10S272"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P10S272'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S273"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S273'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S274"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S274'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P3S275"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P3S275'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S276"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S276'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S277"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S277'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P1S278"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P1S278'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R16P3S279"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R16', xdoxslt:get_variable($_XDOCTX, 'L5R16P3S279'))"/>
                        <!--Control: ================ Start new level: LIST_GTM_H1_GROUP=================-->
                        <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L5R16')"/>
                        <!--Control: ===== END RECORD: N10 =====-->
                        <!--Control: ===== Record Break =====-->
                        <xsl:call-template name="_RECORDBREAK"/>
                        <!--Control: Increase record counter: N10-->
                        <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'N10_RC')"/>
                     </xsl:if>
                     <xsl:for-each select=".//LIST_GTM_H1_GROUP" xdoeft:type="LEVEL" xdoeft:level-name="LIST_GTM_H1_GROUP">
                        <!--Control: ================ Start new level: GTM_H1_GROUP=================-->
                        <xsl:for-each select=".//GTM_H1_GROUP" xdoeft:type="LEVEL" xdoeft:level-name="GTM_H1_GROUP">
                           <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17', string(''))"/>
                           <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17L', number(0))"/>
                           <!--Control: ===== START RECORD: H1 =====-->
                           <xsl:call-template name="COND_v924"/>
                           <!--Check Condition: COND_v924-->
                           <xsl:if test="boolean(xdoxslt:get_variable($_XDOCTX, 'COND_v924_V'))" xdoeft:type="DISPLAY CONDITION">
                              <!--Render: -->
                              <xsl:call-template name="L7R17P3S280"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P3S280'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P1S281"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P1S281'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P10S282"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P10S282'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P1S283"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P1S283'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P4S284"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P4S284'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P1S285"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P1S285'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P1S286"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P1S286'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P1S287"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P1S287'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P30S288"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P30S288'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P1S289"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P1S289'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P24S290"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P24S290'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P1S291"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P1S291'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P6S292"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P6S292'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P1S293"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P1S293'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P3S294"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P3S294'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P1S295"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P1S295'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P2S296"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P2S296'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P1S297"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P1S297'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R17P3S298"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R17', xdoxslt:get_variable($_XDOCTX, 'L7R17P3S298'))"/>
                              <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L7R17')"/>
                              <!--Control: ===== END RECORD: H1 =====-->
                              <!--Control: ===== Record Break =====-->
                              <xsl:call-template name="_RECORDBREAK"/>
                              <!--Control: Increase record counter: H1-->
                              <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'H1_RC')"/>
                           </xsl:if>
                           <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R18', string(''))"/>
                           <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R18L', number(0))"/>
                           <!--Control: ===== START RECORD: H2 =====-->
                           <xsl:call-template name="COND_v986"/>
                           <!--Check Condition: COND_v986-->
                           <xsl:if test="boolean(xdoxslt:get_variable($_XDOCTX, 'COND_v986_V'))" xdoeft:type="DISPLAY CONDITION">
                              <!--Render: -->
                              <xsl:call-template name="L7R18P3S299"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R18', xdoxslt:get_variable($_XDOCTX, 'L7R18P3S299'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R18P1S300"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R18', xdoxslt:get_variable($_XDOCTX, 'L7R18P1S300'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R18P30S301"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R18', xdoxslt:get_variable($_XDOCTX, 'L7R18P30S301'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R18P1S302"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R18', xdoxslt:get_variable($_XDOCTX, 'L7R18P1S302'))"/>
                              <!--Render: -->
                              <xsl:call-template name="L7R18P1S303"/>
                              <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L7R18', xdoxslt:get_variable($_XDOCTX, 'L7R18P1S303'))"/>
                              <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L7R18')"/>
                              <!--Control: ===== END RECORD: H2 =====-->
                              <!--Control: ===== Record Break =====-->
                              <xsl:call-template name="_RECORDBREAK"/>
                              <!--Control: Increase record counter: H2-->
                              <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'H2_RC')"/>
                           </xsl:if>
                        </xsl:for-each>
                     </xsl:for-each>
                  </xsl:for-each>
               </xsl:for-each>
               <!--Control: ================ Start new level: LIST_GTM_VC_GROUP=================-->
               <xsl:for-each select=".//LIST_GTM_VC_GROUP" xdoeft:type="LEVEL" xdoeft:level-name="LIST_GTM_VC_GROUP">
                  <!--Control: ================ Start new level: GTM_VC_GROUP=================-->
                  <xsl:for-each select=".//GTM_VC_GROUP" xdoeft:type="LEVEL" xdoeft:level-name="GTM_VC_GROUP">
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19', string(''))"/>
                     <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19L', number(0))"/>
                     <!--Control: ===== START RECORD: VC =====-->
                     <xsl:call-template name="COND_v1006"/>
                     <!--Check Condition: COND_v1006-->
                     <xsl:if test="boolean(xdoxslt:get_variable($_XDOCTX, 'COND_v1006_V'))" xdoeft:type="DISPLAY CONDITION">
                        <!--Render: -->
                        <xsl:call-template name="L5R19P3S304"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P3S304'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P1S305"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P1S305'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P25S306"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P25S306'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P1S307"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P1S307'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P1S308"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P1S308'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P1S309"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P1S309'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P1S310"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P1S310'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P1S311"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P1S311'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P1S312"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P1S312'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P1S313"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P1S313'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P1S314"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P1S314'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P1S315"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P1S315'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P1S316"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P1S316'))"/>
                        <!--Render: -->
                        <xsl:call-template name="L5R19P1S317"/>
                        <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L5R19', xdoxslt:get_variable($_XDOCTX, 'L5R19P1S317'))"/>
                        <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L5R19')"/>
                        <!--Control: ===== END RECORD: VC =====-->
                        <!--Control: ===== Record Break =====-->
                        <xsl:call-template name="_RECORDBREAK"/>
                        <!--Control: Increase record counter: VC-->
                        <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'VC_RC')"/>
                     </xsl:if>
                  </xsl:for-each>
               </xsl:for-each>
            </xsl:for-each>
         </xsl:for-each>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R20', string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R20L', number(0))"/>
         <!--Control: ===== START RECORD: SE =====-->
         <!--Render: -->
         <xsl:call-template name="L1R20P2S318"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R20', xdoxslt:get_variable($_XDOCTX, 'L1R20P2S318'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R20P1S319"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R20', xdoxslt:get_variable($_XDOCTX, 'L1R20P1S319'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R20P10S320"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R20', xdoxslt:get_variable($_XDOCTX, 'L1R20P10S320'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R20P1S321"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R20', xdoxslt:get_variable($_XDOCTX, 'L1R20P1S321'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R20P9S322"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R20', xdoxslt:get_variable($_XDOCTX, 'L1R20P9S322'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R20')"/>
         <!--Control: ===== END RECORD: SE =====-->
         <!--Control: Increase sequence number 'STSESequence', level: 11-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'STSESequence')"/>
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: SE-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'SE_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R21', string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R21L', number(0))"/>
         <!--Control: ===== START RECORD: GE =====-->
         <!--Render: -->
         <xsl:call-template name="L1R21P2S323"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R21', xdoxslt:get_variable($_XDOCTX, 'L1R21P2S323'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R21P1S324"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R21', xdoxslt:get_variable($_XDOCTX, 'L1R21P1S324'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R21P6S325"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R21', xdoxslt:get_variable($_XDOCTX, 'L1R21P6S325'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R21P1S326"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R21', xdoxslt:get_variable($_XDOCTX, 'L1R21P1S326'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R21P9S327"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R21', xdoxslt:get_variable($_XDOCTX, 'L1R21P9S327'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R21')"/>
         <!--Control: ===== END RECORD: GE =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: GE-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'GE_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R22', string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R22L', number(0))"/>
         <!--Control: ===== START RECORD: IEA =====-->
         <!--Render: -->
         <xsl:call-template name="L1R22P3S328"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R22', xdoxslt:get_variable($_XDOCTX, 'L1R22P3S328'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R22P1S329"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R22', xdoxslt:get_variable($_XDOCTX, 'L1R22P1S329'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R22P5S330"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R22', xdoxslt:get_variable($_XDOCTX, 'L1R22P5S330'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R22P1S331"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R22', xdoxslt:get_variable($_XDOCTX, 'L1R22P1S331'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R22P9S332"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R22', xdoxslt:get_variable($_XDOCTX, 'L1R22P9S332'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R22')"/>
         <!--Control: ===== END RECORD: IEA =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: IEA-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'IEA_RC')"/>
      </xsl:for-each>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGE1', xdoxslt:removeAll(string(xdoxslt:get_variable($_XDOCTX, 'MESSAGETEMPLATES')), string(xdoxslt:get_variable($_XDOCTX, 'MESSAGE'))))"/>
      <xsl:variable name="MESSAGELENGTH" select="string-length(xdoxslt:get_variable($_XDOCTX, 'MESSAGE1'))"/>
      <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'MESSAGE')"/>
   </xsl:template>
   <xsl:template name="_RECORDCOUNTER">
      <!--Record Counter Init-->
      <!--Definition: ISA_RC-->
      <xsl:call-template name="SEQ_START_ISA_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('ISA_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_ISA_RC_V'), number(1))"/>
      <!--Definition: GS_RC-->
      <xsl:call-template name="SEQ_START_GS_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('GS_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_GS_RC_V'), number(1))"/>
      <!--Definition: ST_RC-->
      <xsl:call-template name="SEQ_START_ST_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('ST_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_ST_RC_V'), number(1))"/>
      <!--Definition: M10_RC-->
      <xsl:call-template name="SEQ_START_M10_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('M10_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_M10_RC_V'), number(1))"/>
      <!--Definition: P4_RC-->
      <xsl:call-template name="SEQ_START_P4_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('P4_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_P4_RC_V'), number(1))"/>
      <!--Definition: LX_RC-->
      <xsl:call-template name="SEQ_START_LX_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('LX_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_LX_RC_V'), number(1))"/>
      <!--Definition: M13_RC-->
      <xsl:call-template name="SEQ_START_M13_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('M13_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_M13_RC_V'), number(1))"/>
      <!--Definition: M11_RC-->
      <xsl:call-template name="SEQ_START_M11_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('M11_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_M11_RC_V'), number(1))"/>
      <!--Definition: N9_RC-->
      <xsl:call-template name="SEQ_START_N9_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('N9_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_N9_RC_V'), number(1))"/>
      <!--Definition: N1_RC-->
      <xsl:call-template name="SEQ_START_N1_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('N1_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_N1_RC_V'), number(1))"/>
      <!--Definition: N3_RC-->
      <xsl:call-template name="SEQ_START_N3_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('N3_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_N3_RC_V'), number(1))"/>
      <!--Definition: N4_RC-->
      <xsl:call-template name="SEQ_START_N4_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('N4_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_N4_RC_V'), number(1))"/>
      <!--Definition: PER_RC-->
      <xsl:call-template name="SEQ_START_PER_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('PER_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_PER_RC_V'), number(1))"/>
      <!--Definition: M12_RC-->
      <xsl:call-template name="SEQ_START_M12_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('M12_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_M12_RC_V'), number(1))"/>
      <!--Definition: VID_RC-->
      <xsl:call-template name="SEQ_START_VID_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('VID_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_VID_RC_V'), number(1))"/>
      <!--Definition: N10_RC-->
      <xsl:call-template name="SEQ_START_N10_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('N10_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_N10_RC_V'), number(1))"/>
      <!--Definition: H1_RC-->
      <xsl:call-template name="SEQ_START_H1_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('H1_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_H1_RC_V'), number(1))"/>
      <!--Definition: H2_RC-->
      <xsl:call-template name="SEQ_START_H2_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('H2_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_H2_RC_V'), number(1))"/>
      <!--Definition: VC_RC-->
      <xsl:call-template name="SEQ_START_VC_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('VC_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_VC_RC_V'), number(1))"/>
      <!--Definition: SE_RC-->
      <xsl:call-template name="SEQ_START_SE_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('SE_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_SE_RC_V'), number(1))"/>
      <!--Definition: GE_RC-->
      <xsl:call-template name="SEQ_START_GE_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('GE_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_GE_RC_V'), number(1))"/>
      <!--Definition: IEA_RC-->
      <xsl:call-template name="SEQ_START_IEA_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('IEA_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_IEA_RC_V'), number(1))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_ISA_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_ISA_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R1P3S0">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('ISA')),'NONE')-->
      <xsl:variable name="v1" select="string('ISA')"/>
      <xsl:variable name="v2" select="xdoxslt:convert_case(string(xdoxslt:one($v1)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v2))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v3', substring(string(xdoxslt:one($v2)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v3', $v2)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P3S0', xdoxslt:get_variable($_XDOCTX, '$v3'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S1">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v4" select="string('*')"/>
      <xsl:variable name="v5" select="xdoxslt:convert_case(string(xdoxslt:one($v4)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v5))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v6', substring(string(xdoxslt:one($v5)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v6', $v5)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S1', xdoxslt:get_variable($_XDOCTX, '$v6'))"/>
   </xsl:template>
   <xsl:template name="L1R1P2S2">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('00')),'NONE')-->
      <xsl:variable name="v7" select="string('00')"/>
      <xsl:variable name="v8" select="xdoxslt:convert_case(string(xdoxslt:one($v7)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v8))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v9', substring(string(xdoxslt:one($v8)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v9', $v8)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P2S2', xdoxslt:get_variable($_XDOCTX, '$v9'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S3">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v10" select="string('*')"/>
      <xsl:variable name="v11" select="xdoxslt:convert_case(string(xdoxslt:one($v10)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v11))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v12', substring(string(xdoxslt:one($v11)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v12', $v11)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S3', xdoxslt:get_variable($_XDOCTX, '$v12'))"/>
   </xsl:template>
   <xsl:template name="L1R1P10S4">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((RPAD(SUBSTR(P_TRANSMITTER_ID, 1, 9), 10, ' '))),'NONE')-->
      <xsl:variable name="v13" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//P_TRANSMITTER_ID)[1])), number(1), number(9))"/>
      <xsl:variable name="v14" select="xdoxslt:rpad(string(xdoxslt:one($v13)), number(10), string(' '))"/>
      <xsl:variable name="v15" select="string(xdoxslt:one($v14))"/>
      <xsl:variable name="v16" select="xdoxslt:convert_case(string(xdoxslt:one($v15)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v16))) > 10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v17', substring(string(xdoxslt:one($v16)), 1, 10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v17', $v16)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P10S4', xdoxslt:get_variable($_XDOCTX, '$v17'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v18" select="string('*')"/>
      <xsl:variable name="v19" select="xdoxslt:convert_case(string(xdoxslt:one($v18)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v19))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v20', substring(string(xdoxslt:one($v19)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v20', $v19)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S5', xdoxslt:get_variable($_XDOCTX, '$v20'))"/>
   </xsl:template>
   <xsl:template name="L1R1P2S6">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('00')),'NONE')-->
      <xsl:variable name="v21" select="string('00')"/>
      <xsl:variable name="v22" select="xdoxslt:convert_case(string(xdoxslt:one($v21)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v22))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v23', substring(string(xdoxslt:one($v22)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v23', $v22)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P2S6', xdoxslt:get_variable($_XDOCTX, '$v23'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S7">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v24" select="string('*')"/>
      <xsl:variable name="v25" select="xdoxslt:convert_case(string(xdoxslt:one($v24)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v25))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v26', substring(string(xdoxslt:one($v25)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v26', $v25)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S7', xdoxslt:get_variable($_XDOCTX, '$v26'))"/>
   </xsl:template>
   <xsl:template name="L1R1P10S8">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((RPAD(SUBSTR(P_COMMUNICATION_PASSWORD_ID, 1, 6),10,' '))),'NONE')-->
      <xsl:variable name="v27" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//P_COMMUNICATION_PASSWORD_ID)[1])), number(1), number(6))"/>
      <xsl:variable name="v28" select="xdoxslt:rpad(string(xdoxslt:one($v27)), number(10), string(' '))"/>
      <xsl:variable name="v29" select="string(xdoxslt:one($v28))"/>
      <xsl:variable name="v30" select="xdoxslt:convert_case(string(xdoxslt:one($v29)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v30))) > 10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v31', substring(string(xdoxslt:one($v30)), 1, 10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v31', $v30)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P10S8', xdoxslt:get_variable($_XDOCTX, '$v31'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S9">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v32" select="string('*')"/>
      <xsl:variable name="v33" select="xdoxslt:convert_case(string(xdoxslt:one($v32)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v33))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v34', substring(string(xdoxslt:one($v33)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v34', $v33)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S9', xdoxslt:get_variable($_XDOCTX, '$v34'))"/>
   </xsl:template>
   <xsl:template name="L1R1P2S10">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('ZZ')),'NONE')-->
      <xsl:variable name="v35" select="string('ZZ')"/>
      <xsl:variable name="v36" select="xdoxslt:convert_case(string(xdoxslt:one($v35)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v36))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v37', substring(string(xdoxslt:one($v36)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v37', $v36)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P2S10', xdoxslt:get_variable($_XDOCTX, '$v37'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S11">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v38" select="string('*')"/>
      <xsl:variable name="v39" select="xdoxslt:convert_case(string(xdoxslt:one($v38)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v39))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v40', substring(string(xdoxslt:one($v39)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v40', $v39)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S11', xdoxslt:get_variable($_XDOCTX, '$v40'))"/>
   </xsl:template>
   <xsl:template name="L1R1P15S12">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((RPAD(SUBSTR(P_FILER_ID, 1, 9),15,' ' ))),'NONE')-->
      <xsl:variable name="v41" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//P_FILER_ID)[1])), number(1), number(9))"/>
      <xsl:variable name="v42" select="xdoxslt:rpad(string(xdoxslt:one($v41)), number(15), string(' '))"/>
      <xsl:variable name="v43" select="string(xdoxslt:one($v42))"/>
      <xsl:variable name="v44" select="xdoxslt:convert_case(string(xdoxslt:one($v43)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v44))) > 15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v45', substring(string(xdoxslt:one($v44)), 1, 15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v45', $v44)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P15S12', xdoxslt:get_variable($_XDOCTX, '$v45'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S13">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v46" select="string('*')"/>
      <xsl:variable name="v47" select="xdoxslt:convert_case(string(xdoxslt:one($v46)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v47))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v48', substring(string(xdoxslt:one($v47)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v48', $v47)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S13', xdoxslt:get_variable($_XDOCTX, '$v48'))"/>
   </xsl:template>
   <xsl:template name="L1R1P2S14">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('ZZ')),'NONE')-->
      <xsl:variable name="v49" select="string('ZZ')"/>
      <xsl:variable name="v50" select="xdoxslt:convert_case(string(xdoxslt:one($v49)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v50))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v51', substring(string(xdoxslt:one($v50)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v51', $v50)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P2S14', xdoxslt:get_variable($_XDOCTX, '$v51'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S15">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v52" select="string('*')"/>
      <xsl:variable name="v53" select="xdoxslt:convert_case(string(xdoxslt:one($v52)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v53))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v54', substring(string(xdoxslt:one($v53)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v54', $v53)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S15', xdoxslt:get_variable($_XDOCTX, '$v54'))"/>
   </xsl:template>
   <xsl:template name="L1R1P15S16">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF P_IS_PRODUCTION = 'Y' THEN 
RPAD('CUSTOMS',15, ' ')
ELSE 
RPAD('CUSTOMSTST'
,15, ' ')
END IF)),'NONE')-->
      <xsl:variable name="v55" select="xdoxslt:normalize_string($_XDOCTX, (.//P_IS_PRODUCTION)[1]) = 'Y'"/>
      <xsl:variable name="v56" select="xdoxslt:rpad(string('CUSTOMS'), number(15), string(' '))"/>
      <xsl:variable name="v57" select="xdoxslt:rpad(string('CUSTOMSTST'), number(15), string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v58t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v55)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v58t', $v56)"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v58t', $v57)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:variable name="v58" select="xdoxslt:get_variable($_XDOCTX, 'v58t')"/>
      <xsl:variable name="v59" select="string(xdoxslt:one($v58))"/>
      <xsl:variable name="v60" select="xdoxslt:convert_case(string(xdoxslt:one($v59)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v60))) > 15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v61', substring(string(xdoxslt:one($v60)), 1, 15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v61', $v60)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P15S16', xdoxslt:get_variable($_XDOCTX, '$v61'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S17">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v62" select="string('*')"/>
      <xsl:variable name="v63" select="xdoxslt:convert_case(string(xdoxslt:one($v62)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v63))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v64', substring(string(xdoxslt:one($v63)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v64', $v63)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S17', xdoxslt:get_variable($_XDOCTX, '$v64'))"/>
   </xsl:template>
   <xsl:template name="L1R1P2S18">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((SUBSTR(INTERCHANGE_DATE, 3,2)))-->
      <xsl:variable name="v65" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//INTERCHANGE_DATE)[1])), number(3), number(2))"/>
      <xsl:variable name="v66" select="xdoxslt:to_number(xdoxslt:one($v65))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v66))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v67', substring(string(xdoxslt:one($v66)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v67', $v66)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P2S18', xdoxslt:get_variable($_XDOCTX, '$v67'))"/>
   </xsl:template>
   <xsl:template name="L1R1P2S19">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((SUBSTR(INTERCHANGE_DATE,5, 2)))-->
      <xsl:variable name="v68" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//INTERCHANGE_DATE)[1])), number(5), number(2))"/>
      <xsl:variable name="v69" select="xdoxslt:to_number(xdoxslt:one($v68))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v69))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v70', substring(string(xdoxslt:one($v69)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v70', $v69)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P2S19', xdoxslt:get_variable($_XDOCTX, '$v70'))"/>
   </xsl:template>
   <xsl:template name="L1R1P2S20">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((SUBSTR(INTERCHANGE_DATE,7, 2)))-->
      <xsl:variable name="v71" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//INTERCHANGE_DATE)[1])), number(7), number(2))"/>
      <xsl:variable name="v72" select="xdoxslt:to_number(xdoxslt:one($v71))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v72))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v73', substring(string(xdoxslt:one($v72)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v73', $v72)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P2S20', xdoxslt:get_variable($_XDOCTX, '$v73'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S21">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v74" select="string('*')"/>
      <xsl:variable name="v75" select="xdoxslt:convert_case(string(xdoxslt:one($v74)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v75))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v76', substring(string(xdoxslt:one($v75)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v76', $v75)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S21', xdoxslt:get_variable($_XDOCTX, '$v76'))"/>
   </xsl:template>
   <xsl:template name="L1R1P2S22">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((SUBSTR(INTERCHANGE_DATE,9, 2)))-->
      <xsl:variable name="v77" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//INTERCHANGE_DATE)[1])), number(9), number(2))"/>
      <xsl:variable name="v78" select="xdoxslt:to_number(xdoxslt:one($v77))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v78))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v79', substring(string(xdoxslt:one($v78)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v79', $v78)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P2S22', xdoxslt:get_variable($_XDOCTX, '$v79'))"/>
   </xsl:template>
   <xsl:template name="L1R1P2S23">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((SUBSTR(INTERCHANGE_DATE, 11, 2)))-->
      <xsl:variable name="v80" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//INTERCHANGE_DATE)[1])), number(11), number(2))"/>
      <xsl:variable name="v81" select="xdoxslt:to_number(xdoxslt:one($v80))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v81))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v82', substring(string(xdoxslt:one($v81)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v82', $v81)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P2S23', xdoxslt:get_variable($_XDOCTX, '$v82'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S24">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v83" select="string('*')"/>
      <xsl:variable name="v84" select="xdoxslt:convert_case(string(xdoxslt:one($v83)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v84))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v85', substring(string(xdoxslt:one($v84)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v85', $v84)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S24', xdoxslt:get_variable($_XDOCTX, '$v85'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S25">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('U')),'NONE')-->
      <xsl:variable name="v86" select="string('U')"/>
      <xsl:variable name="v87" select="xdoxslt:convert_case(string(xdoxslt:one($v86)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v87))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v88', substring(string(xdoxslt:one($v87)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v88', $v87)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S25', xdoxslt:get_variable($_XDOCTX, '$v88'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S26">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v89" select="string('*')"/>
      <xsl:variable name="v90" select="xdoxslt:convert_case(string(xdoxslt:one($v89)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v90))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v91', substring(string(xdoxslt:one($v90)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v91', $v90)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S26', xdoxslt:get_variable($_XDOCTX, '$v91'))"/>
   </xsl:template>
   <xsl:template name="L1R1P5S27">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('00401')),'NONE')-->
      <xsl:variable name="v92" select="string('00401')"/>
      <xsl:variable name="v93" select="xdoxslt:convert_case(string(xdoxslt:one($v92)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v93))) > 5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v94', substring(string(xdoxslt:one($v93)), 1, 5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v94', $v93)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P5S27', xdoxslt:get_variable($_XDOCTX, '$v94'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S28">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v95" select="string('*')"/>
      <xsl:variable name="v96" select="xdoxslt:convert_case(string(xdoxslt:one($v95)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v96))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v97', substring(string(xdoxslt:one($v96)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v97', $v96)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S28', xdoxslt:get_variable($_XDOCTX, '$v97'))"/>
   </xsl:template>
   <xsl:template name="L1R1P9S29">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((LPAD(LIST_GTM_SHIPMENT/GTM_SHIPMENT/LIST_OTM_CONTROL/OTM_CONTROL/INTNUM,9,'0')))-->
      <xsl:variable name="v98" select="xdoxslt:lpad(string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_SHIPMENT/GTM_SHIPMENT/LIST_OTM_CONTROL/OTM_CONTROL/INTNUM)[1])), number(9), string('0'))"/>
      <xsl:variable name="v99" select="xdoxslt:to_number(xdoxslt:one($v98))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v99))) > 9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v100', substring(string(xdoxslt:one($v99)), 1, 9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v100', $v99)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P9S29', xdoxslt:get_variable($_XDOCTX, '$v100'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S30">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v101" select="string('*')"/>
      <xsl:variable name="v102" select="xdoxslt:convert_case(string(xdoxslt:one($v101)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v102))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v103', substring(string(xdoxslt:one($v102)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v103', $v102)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S30', xdoxslt:get_variable($_XDOCTX, '$v103'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S31">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('0')),'NONE')-->
      <xsl:variable name="v104" select="string('0')"/>
      <xsl:variable name="v105" select="xdoxslt:convert_case(string(xdoxslt:one($v104)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v105))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v106', substring(string(xdoxslt:one($v105)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v106', $v105)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S31', xdoxslt:get_variable($_XDOCTX, '$v106'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S32">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v107" select="string('*')"/>
      <xsl:variable name="v108" select="xdoxslt:convert_case(string(xdoxslt:one($v107)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v108))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v109', substring(string(xdoxslt:one($v108)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v109', $v108)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S32', xdoxslt:get_variable($_XDOCTX, '$v109'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S33">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF P_IS_PRODUCTION ='Y' THEN 
'P'
ELSE 
'T'
END IF)),'NONE')-->
      <xsl:variable name="v110" select="xdoxslt:normalize_string($_XDOCTX, (.//P_IS_PRODUCTION)[1]) = 'Y'"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v111t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v110)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v111t', 'P')"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v111t', 'T')"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:variable name="v111" select="xdoxslt:get_variable($_XDOCTX, 'v111t')"/>
      <xsl:variable name="v112" select="string(xdoxslt:one($v111))"/>
      <xsl:variable name="v113" select="xdoxslt:convert_case(string(xdoxslt:one($v112)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v113))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v114', substring(string(xdoxslt:one($v113)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v114', $v113)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S33', xdoxslt:get_variable($_XDOCTX, '$v114'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S34">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v115" select="string('*')"/>
      <xsl:variable name="v116" select="xdoxslt:convert_case(string(xdoxslt:one($v115)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v116))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v117', substring(string(xdoxslt:one($v116)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v117', $v116)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S34', xdoxslt:get_variable($_XDOCTX, '$v117'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S35">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((':')),'NONE')-->
      <xsl:variable name="v118" select="string(':')"/>
      <xsl:variable name="v119" select="xdoxslt:convert_case(string(xdoxslt:one($v118)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v119))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v120', substring(string(xdoxslt:one($v119)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v120', $v119)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S35', xdoxslt:get_variable($_XDOCTX, '$v120'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_GS_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_GS_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R2P2S36">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('GS')),'NONE')-->
      <xsl:variable name="v121" select="string('GS')"/>
      <xsl:variable name="v122" select="xdoxslt:convert_case(string(xdoxslt:one($v121)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v122))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v123', substring(string(xdoxslt:one($v122)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v123', $v122)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P2S36', xdoxslt:get_variable($_XDOCTX, '$v123'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S37">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v124" select="string('*')"/>
      <xsl:variable name="v125" select="xdoxslt:convert_case(string(xdoxslt:one($v124)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v125))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v126', substring(string(xdoxslt:one($v125)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v126', $v125)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S37', xdoxslt:get_variable($_XDOCTX, '$v126'))"/>
   </xsl:template>
   <xsl:template name="L1R2P2S38">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('SO')),'NONE')-->
      <xsl:variable name="v127" select="string('SO')"/>
      <xsl:variable name="v128" select="xdoxslt:convert_case(string(xdoxslt:one($v127)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v128))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v129', substring(string(xdoxslt:one($v128)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v129', $v128)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P2S38', xdoxslt:get_variable($_XDOCTX, '$v129'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S39">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v130" select="string('*')"/>
      <xsl:variable name="v131" select="xdoxslt:convert_case(string(xdoxslt:one($v130)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v131))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v132', substring(string(xdoxslt:one($v131)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v132', $v131)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S39', xdoxslt:get_variable($_XDOCTX, '$v132'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S40">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((P_FILER_ID)),'NONE')-->
      <xsl:variable name="v133" select="string(xdoxslt:normalize_string($_XDOCTX, (.//P_FILER_ID)[1]))"/>
      <xsl:variable name="v134" select="xdoxslt:convert_case(string(xdoxslt:one($v133)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v134))) > 15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v135', substring(string(xdoxslt:one($v134)), 1, 15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v135', $v134)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S40', xdoxslt:get_variable($_XDOCTX, '$v135'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S41">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v136" select="string('*')"/>
      <xsl:variable name="v137" select="xdoxslt:convert_case(string(xdoxslt:one($v136)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v137))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v138', substring(string(xdoxslt:one($v137)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v138', $v137)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S41', xdoxslt:get_variable($_XDOCTX, '$v138'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S42">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF P_IS_PRODUCTION = 'Y' THEN 
'USCSAMS'
ELSE 
'USCSAMSTEST'
END IF)),'NONE')-->
      <xsl:variable name="v139" select="xdoxslt:normalize_string($_XDOCTX, (.//P_IS_PRODUCTION)[1]) = 'Y'"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v140t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v139)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v140t', 'USCSAMS')"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v140t', 'USCSAMSTEST')"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:variable name="v140" select="xdoxslt:get_variable($_XDOCTX, 'v140t')"/>
      <xsl:variable name="v141" select="string(xdoxslt:one($v140))"/>
      <xsl:variable name="v142" select="xdoxslt:convert_case(string(xdoxslt:one($v141)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v142))) > 15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v143', substring(string(xdoxslt:one($v142)), 1, 15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v143', $v142)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S42', xdoxslt:get_variable($_XDOCTX, '$v143'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S43">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v144" select="string('*')"/>
      <xsl:variable name="v145" select="xdoxslt:convert_case(string(xdoxslt:one($v144)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v145))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v146', substring(string(xdoxslt:one($v145)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v146', $v145)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S43', xdoxslt:get_variable($_XDOCTX, '$v146'))"/>
   </xsl:template>
   <xsl:template name="L1R2P4S44">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((SUBSTR(INTERCHANGE_DATE, 1, 4)))-->
      <xsl:variable name="v147" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//INTERCHANGE_DATE)[1])), number(1), number(4))"/>
      <xsl:variable name="v148" select="xdoxslt:to_number(xdoxslt:one($v147))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v148))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v149', substring(string(xdoxslt:one($v148)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v149', $v148)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P4S44', xdoxslt:get_variable($_XDOCTX, '$v149'))"/>
   </xsl:template>
   <xsl:template name="L1R2P2S45">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((SUBSTR(INTERCHANGE_DATE, 5, 2)))-->
      <xsl:variable name="v150" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//INTERCHANGE_DATE)[1])), number(5), number(2))"/>
      <xsl:variable name="v151" select="xdoxslt:to_number(xdoxslt:one($v150))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v151))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v152', substring(string(xdoxslt:one($v151)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v152', $v151)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P2S45', xdoxslt:get_variable($_XDOCTX, '$v152'))"/>
   </xsl:template>
   <xsl:template name="L1R2P2S46">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((SUBSTR(INTERCHANGE_DATE, 7, 2)))-->
      <xsl:variable name="v153" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//INTERCHANGE_DATE)[1])), number(7), number(2))"/>
      <xsl:variable name="v154" select="xdoxslt:to_number(xdoxslt:one($v153))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v154))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v155', substring(string(xdoxslt:one($v154)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v155', $v154)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P2S46', xdoxslt:get_variable($_XDOCTX, '$v155'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S47">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v156" select="string('*')"/>
      <xsl:variable name="v157" select="xdoxslt:convert_case(string(xdoxslt:one($v156)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v157))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v158', substring(string(xdoxslt:one($v157)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v158', $v157)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S47', xdoxslt:get_variable($_XDOCTX, '$v158'))"/>
   </xsl:template>
   <xsl:template name="L1R2P2S48">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((SUBSTR(INTERCHANGE_DATE,9, 2)))-->
      <xsl:variable name="v159" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//INTERCHANGE_DATE)[1])), number(9), number(2))"/>
      <xsl:variable name="v160" select="xdoxslt:to_number(xdoxslt:one($v159))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v160))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v161', substring(string(xdoxslt:one($v160)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v161', $v160)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P2S48', xdoxslt:get_variable($_XDOCTX, '$v161'))"/>
   </xsl:template>
   <xsl:template name="L1R2P2S49">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((SUBSTR(INTERCHANGE_DATE, 11, 2)))-->
      <xsl:variable name="v162" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//INTERCHANGE_DATE)[1])), number(11), number(2))"/>
      <xsl:variable name="v163" select="xdoxslt:to_number(xdoxslt:one($v162))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v163))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v164', substring(string(xdoxslt:one($v163)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v164', $v163)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P2S49', xdoxslt:get_variable($_XDOCTX, '$v164'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S50">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v165" select="string('*')"/>
      <xsl:variable name="v166" select="xdoxslt:convert_case(string(xdoxslt:one($v165)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v166))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v167', substring(string(xdoxslt:one($v166)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v167', $v166)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S50', xdoxslt:get_variable($_XDOCTX, '$v167'))"/>
   </xsl:template>
   <xsl:template name="L1R2P9S51">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((LIST_GTM_SHIPMENT/GTM_SHIPMENT/LIST_OTM_CONTROL/OTM_CONTROL/INTNUM))-->
      <xsl:variable name="v168" select="xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_SHIPMENT/GTM_SHIPMENT/LIST_OTM_CONTROL/OTM_CONTROL/INTNUM)[1]))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v168))) > 9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v169', substring(string(xdoxslt:one($v168)), 1, 9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v169', $v168)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P9S51', xdoxslt:get_variable($_XDOCTX, '$v169'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S52">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v170" select="string('*')"/>
      <xsl:variable name="v171" select="xdoxslt:convert_case(string(xdoxslt:one($v170)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v171))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v172', substring(string(xdoxslt:one($v171)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v172', $v171)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S52', xdoxslt:get_variable($_XDOCTX, '$v172'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S53">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('X')),'NONE')-->
      <xsl:variable name="v173" select="string('X')"/>
      <xsl:variable name="v174" select="xdoxslt:convert_case(string(xdoxslt:one($v173)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v174))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v175', substring(string(xdoxslt:one($v174)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v175', $v174)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S53', xdoxslt:get_variable($_XDOCTX, '$v175'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S54">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v176" select="string('*')"/>
      <xsl:variable name="v177" select="xdoxslt:convert_case(string(xdoxslt:one($v176)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v177))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v178', substring(string(xdoxslt:one($v177)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v178', $v177)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S54', xdoxslt:get_variable($_XDOCTX, '$v178'))"/>
   </xsl:template>
   <xsl:template name="L1R2P6S55">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('00405')),'NONE')-->
      <xsl:variable name="v179" select="string('00405')"/>
      <xsl:variable name="v180" select="xdoxslt:convert_case(string(xdoxslt:one($v179)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v180))) > 6">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v181', substring(string(xdoxslt:one($v180)), 1, 6))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v181', $v180)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P6S55', xdoxslt:get_variable($_XDOCTX, '$v181'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_ST_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_ST_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R3P2S56">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('ST')),'NONE')-->
      <xsl:variable name="v182" select="string('ST')"/>
      <xsl:variable name="v183" select="xdoxslt:convert_case(string(xdoxslt:one($v182)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v183))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v184', substring(string(xdoxslt:one($v183)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v184', $v183)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P2S56', xdoxslt:get_variable($_XDOCTX, '$v184'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S57">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v185" select="string('*')"/>
      <xsl:variable name="v186" select="xdoxslt:convert_case(string(xdoxslt:one($v185)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v186))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v187', substring(string(xdoxslt:one($v186)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v187', $v186)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S57', xdoxslt:get_variable($_XDOCTX, '$v187'))"/>
   </xsl:template>
   <xsl:template name="L1R3P3S58">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('309')),'NONE')-->
      <xsl:variable name="v188" select="string('309')"/>
      <xsl:variable name="v189" select="xdoxslt:convert_case(string(xdoxslt:one($v188)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v189))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v190', substring(string(xdoxslt:one($v189)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v190', $v189)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P3S58', xdoxslt:get_variable($_XDOCTX, '$v190'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S59">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v191" select="string('*')"/>
      <xsl:variable name="v192" select="xdoxslt:convert_case(string(xdoxslt:one($v191)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v192))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v193', substring(string(xdoxslt:one($v192)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v193', $v192)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S59', xdoxslt:get_variable($_XDOCTX, '$v193'))"/>
   </xsl:template>
   <xsl:template name="L1R3P9S60">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_SHIPMENT/GTM_SHIPMENT/LIST_OTM_CONTROL/OTM_CONTROL/TRANNUM)),'NONE')-->
      <xsl:variable name="v194" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_SHIPMENT/GTM_SHIPMENT/LIST_OTM_CONTROL/OTM_CONTROL/TRANNUM)[1]))"/>
      <xsl:variable name="v195" select="xdoxslt:convert_case(string(xdoxslt:one($v194)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v195))) > 9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v196', substring(string(xdoxslt:one($v195)), 1, 9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v196', $v195)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P9S60', xdoxslt:get_variable($_XDOCTX, '$v196'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S61">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v197" select="string('*')"/>
      <xsl:variable name="v198" select="xdoxslt:convert_case(string(xdoxslt:one($v197)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v198))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v199', substring(string(xdoxslt:one($v198)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v199', $v198)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S61', xdoxslt:get_variable($_XDOCTX, '$v199'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S62">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v200" select="string('*')"/>
      <xsl:variable name="v201" select="xdoxslt:convert_case(string(xdoxslt:one($v200)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v201))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v202', substring(string(xdoxslt:one($v201)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v202', $v201)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S62', xdoxslt:get_variable($_XDOCTX, '$v202'))"/>
   </xsl:template>
   <xsl:template name="SEQ_MAX_STSESequence">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 99999999-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_MAX_STSESequence_V', 99999999)"/>
   </xsl:template>
   <xsl:template name="SEQ_START_STSESequence">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 1-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_STSESequence_V', 1)"/>
   </xsl:template>
   <xsl:template name="SEQ_START_M10_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_M10_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L3R4P3S63">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('M10')),'NONE')-->
      <xsl:variable name="v203" select="string('M10')"/>
      <xsl:variable name="v204" select="xdoxslt:convert_case(string(xdoxslt:one($v203)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v204))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v205', substring(string(xdoxslt:one($v204)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v205', $v204)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P3S63', xdoxslt:get_variable($_XDOCTX, '$v205'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S64">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v206" select="string('*')"/>
      <xsl:variable name="v207" select="xdoxslt:convert_case(string(xdoxslt:one($v206)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v207))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v208', substring(string(xdoxslt:one($v207)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v208', $v207)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S64', xdoxslt:get_variable($_XDOCTX, '$v208'))"/>
   </xsl:template>
   <xsl:template name="L3R4P4S65">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((../../P_FILER_ID)),'NONE')-->
      <xsl:variable name="v209" select="string(xdoxslt:normalize_string($_XDOCTX, (../../P_FILER_ID)[1]))"/>
      <xsl:variable name="v210" select="xdoxslt:convert_case(string(xdoxslt:one($v209)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v210))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v211', substring(string(xdoxslt:one($v210)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v211', $v210)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P4S65', xdoxslt:get_variable($_XDOCTX, '$v211'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S66">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v212" select="string('*')"/>
      <xsl:variable name="v213" select="xdoxslt:convert_case(string(xdoxslt:one($v212)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v213))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v214', substring(string(xdoxslt:one($v213)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v214', $v213)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S66', xdoxslt:get_variable($_XDOCTX, '$v214'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S67">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('O')),'NONE')-->
      <xsl:variable name="v215" select="string('O')"/>
      <xsl:variable name="v216" select="xdoxslt:convert_case(string(xdoxslt:one($v215)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v216))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v217', substring(string(xdoxslt:one($v216)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v217', $v216)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S67', xdoxslt:get_variable($_XDOCTX, '$v217'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S68">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v218" select="string('*')"/>
      <xsl:variable name="v219" select="xdoxslt:convert_case(string(xdoxslt:one($v218)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v219))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v220', substring(string(xdoxslt:one($v219)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v220', $v219)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S68', xdoxslt:get_variable($_XDOCTX, '$v220'))"/>
   </xsl:template>
   <xsl:template name="L3R4P2S69">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_CHARTER_VOYAGE_REFNUM/GTM_CHARTER_VOYAGE_REFNUM/VESSEL_FLAG)),'NONE')-->
      <xsl:variable name="v221" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_CHARTER_VOYAGE_REFNUM/GTM_CHARTER_VOYAGE_REFNUM/VESSEL_FLAG)[1]))"/>
      <xsl:variable name="v222" select="xdoxslt:convert_case(string(xdoxslt:one($v221)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v222))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v223', substring(string(xdoxslt:one($v222)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v223', $v222)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P2S69', xdoxslt:get_variable($_XDOCTX, '$v223'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S70">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v224" select="string('*')"/>
      <xsl:variable name="v225" select="xdoxslt:convert_case(string(xdoxslt:one($v224)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v225))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v226', substring(string(xdoxslt:one($v225)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v226', $v225)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S70', xdoxslt:get_variable($_XDOCTX, '$v226'))"/>
   </xsl:template>
   <xsl:template name="L3R4P7S71">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_CHARTER_VOYAGE_REFNUM/GTM_CHARTER_VOYAGE_REFNUM/VESSEL_CODE)),'NONE')-->
      <xsl:variable name="v227" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_CHARTER_VOYAGE_REFNUM/GTM_CHARTER_VOYAGE_REFNUM/VESSEL_CODE)[1]))"/>
      <xsl:variable name="v228" select="xdoxslt:convert_case(string(xdoxslt:one($v227)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v228))) > 7">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v229', substring(string(xdoxslt:one($v228)), 1, 7))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v229', $v228)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P7S71', xdoxslt:get_variable($_XDOCTX, '$v229'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S72">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v230" select="string('*')"/>
      <xsl:variable name="v231" select="xdoxslt:convert_case(string(xdoxslt:one($v230)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v231))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v232', substring(string(xdoxslt:one($v231)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v232', $v231)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S72', xdoxslt:get_variable($_XDOCTX, '$v232'))"/>
   </xsl:template>
   <xsl:template name="L3R4P28S73">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_CHARTER_VOYAGE_REFNUM/GTM_CHARTER_VOYAGE_REFNUM/VOYAGE_NAME)),'NONE')-->
      <xsl:variable name="v233" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_CHARTER_VOYAGE_REFNUM/GTM_CHARTER_VOYAGE_REFNUM/VOYAGE_NAME)[1]))"/>
      <xsl:variable name="v234" select="xdoxslt:convert_case(string(xdoxslt:one($v233)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v234))) > 28">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v235', substring(string(xdoxslt:one($v234)), 1, 28))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v235', $v234)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P28S73', xdoxslt:get_variable($_XDOCTX, '$v235'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S74">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v236" select="string('*')"/>
      <xsl:variable name="v237" select="xdoxslt:convert_case(string(xdoxslt:one($v236)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v237))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v238', substring(string(xdoxslt:one($v237)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v238', $v237)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S74', xdoxslt:get_variable($_XDOCTX, '$v238'))"/>
   </xsl:template>
   <xsl:template name="L3R4P10S75">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_CHARTER_VOYAGE_NUMBER/GTM_CHARTER_VOYAGE_NUMBER/VOYAGE_NUMBER)),'NONE')-->
      <xsl:variable name="v239" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_CHARTER_VOYAGE_NUMBER/GTM_CHARTER_VOYAGE_NUMBER/VOYAGE_NUMBER)[1]))"/>
      <xsl:variable name="v240" select="xdoxslt:convert_case(string(xdoxslt:one($v239)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v240))) > 10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v241', substring(string(xdoxslt:one($v240)), 1, 10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v241', $v240)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P10S75', xdoxslt:get_variable($_XDOCTX, '$v241'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S76">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v242" select="string('*')"/>
      <xsl:variable name="v243" select="xdoxslt:convert_case(string(xdoxslt:one($v242)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v243))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v244', substring(string(xdoxslt:one($v243)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v244', $v243)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S76', xdoxslt:get_variable($_XDOCTX, '$v244'))"/>
   </xsl:template>
   <xsl:template name="L3R4P30S77">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('       ')),'NONE')-->
      <xsl:variable name="v245" select="string('       ')"/>
      <xsl:variable name="v246" select="xdoxslt:convert_case(string(xdoxslt:one($v245)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v246))) > 30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v247', substring(string(xdoxslt:one($v246)), 1, 30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v247', $v246)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P30S77', xdoxslt:get_variable($_XDOCTX, '$v247'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S78">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v248" select="string('*')"/>
      <xsl:variable name="v249" select="xdoxslt:convert_case(string(xdoxslt:one($v248)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v249))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v250', substring(string(xdoxslt:one($v249)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v250', $v249)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S78', xdoxslt:get_variable($_XDOCTX, '$v250'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S79">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v251" select="string('*')"/>
      <xsl:variable name="v252" select="xdoxslt:convert_case(string(xdoxslt:one($v251)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v252))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v253', substring(string(xdoxslt:one($v252)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v253', $v252)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S79', xdoxslt:get_variable($_XDOCTX, '$v253'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S80">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_MANIFEST_TYPE_CODE/GTM_MANIFEST_TYPE_CODE/MANIFEST_TYPE_CODE)),'NONE')-->
      <xsl:variable name="v254" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_MANIFEST_TYPE_CODE/GTM_MANIFEST_TYPE_CODE/MANIFEST_TYPE_CODE)[1]))"/>
      <xsl:variable name="v255" select="xdoxslt:convert_case(string(xdoxslt:one($v254)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v255))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v256', substring(string(xdoxslt:one($v255)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v256', $v255)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S80', xdoxslt:get_variable($_XDOCTX, '$v256'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S81">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v257" select="string('*')"/>
      <xsl:variable name="v258" select="xdoxslt:convert_case(string(xdoxslt:one($v257)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v258))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v259', substring(string(xdoxslt:one($v258)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v259', $v258)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S81', xdoxslt:get_variable($_XDOCTX, '$v259'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S82">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF LIST_GTM_CHARTER_VOYAGE_REFNUM/GTM_CHARTER_VOYAGE_REFNUM/VESSEL_CODE IS NOT NULL
THEN 'L' 
ELSE '' 
END IF)),'NONE')-->
      <xsl:variable name="v260" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_CHARTER_VOYAGE_REFNUM/GTM_CHARTER_VOYAGE_REFNUM/VESSEL_CODE)[1]) != ''"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v261t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v260)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v261t', 'L')"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v261t', '')"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:variable name="v261" select="xdoxslt:get_variable($_XDOCTX, 'v261t')"/>
      <xsl:variable name="v262" select="string(xdoxslt:one($v261))"/>
      <xsl:variable name="v263" select="xdoxslt:convert_case(string(xdoxslt:one($v262)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v263))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v264', substring(string(xdoxslt:one($v263)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v264', $v263)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S82', xdoxslt:get_variable($_XDOCTX, '$v264'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S83">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v265" select="string('*')"/>
      <xsl:variable name="v266" select="xdoxslt:convert_case(string(xdoxslt:one($v265)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v266))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v267', substring(string(xdoxslt:one($v266)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v267', $v266)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S83', xdoxslt:get_variable($_XDOCTX, '$v267'))"/>
   </xsl:template>
   <xsl:template name="L3R4P1S84">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v268" select="string('*')"/>
      <xsl:variable name="v269" select="xdoxslt:convert_case(string(xdoxslt:one($v268)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v269))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v270', substring(string(xdoxslt:one($v269)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v270', $v269)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P1S84', xdoxslt:get_variable($_XDOCTX, '$v270'))"/>
   </xsl:template>
   <xsl:template name="L3R4P30S85">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((GTM_SHIPMENT_XID)),'NONE')-->
      <xsl:variable name="v271" select="string(xdoxslt:normalize_string($_XDOCTX, (.//GTM_SHIPMENT_XID)[1]))"/>
      <xsl:variable name="v272" select="xdoxslt:convert_case(string(xdoxslt:one($v271)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v272))) > 30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v273', substring(string(xdoxslt:one($v272)), 1, 30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v273', $v272)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R4P30S85', xdoxslt:get_variable($_XDOCTX, '$v273'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_P4_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_P4_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L5R5P3S86">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('P4')),'NONE')-->
      <xsl:variable name="v274" select="string('P4')"/>
      <xsl:variable name="v275" select="xdoxslt:convert_case(string(xdoxslt:one($v274)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v275))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v276', substring(string(xdoxslt:one($v275)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v276', $v275)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R5P3S86', xdoxslt:get_variable($_XDOCTX, '$v276'))"/>
   </xsl:template>
   <xsl:template name="L5R5P1S87">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v277" select="string('*')"/>
      <xsl:variable name="v278" select="xdoxslt:convert_case(string(xdoxslt:one($v277)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v278))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v279', substring(string(xdoxslt:one($v278)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v279', $v278)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R5P1S87', xdoxslt:get_variable($_XDOCTX, '$v279'))"/>
   </xsl:template>
   <xsl:template name="L5R5P5S88">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SCHEDULE_D_CODE)),'NONE')-->
      <xsl:variable name="v280" select="string(xdoxslt:normalize_string($_XDOCTX, (.//SCHEDULE_D_CODE)[1]))"/>
      <xsl:variable name="v281" select="xdoxslt:convert_case(string(xdoxslt:one($v280)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v281))) > 5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v282', substring(string(xdoxslt:one($v281)), 1, 5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v282', $v281)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R5P5S88', xdoxslt:get_variable($_XDOCTX, '$v282'))"/>
   </xsl:template>
   <xsl:template name="L5R5P1S89">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v283" select="string('*')"/>
      <xsl:variable name="v284" select="xdoxslt:convert_case(string(xdoxslt:one($v283)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v284))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v285', substring(string(xdoxslt:one($v284)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v285', $v284)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R5P1S89', xdoxslt:get_variable($_XDOCTX, '$v285'))"/>
   </xsl:template>
   <xsl:template name="L5R5P10S90">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((../../LIST_GTM_CHARTER_VOYAGE/GTM_CHARTER_VOYAGE/ESTIMATED_ARRIVAL_DATE)),'NONE')-->
      <xsl:variable name="v286" select="string(xdoxslt:normalize_string($_XDOCTX, (../../LIST_GTM_CHARTER_VOYAGE/GTM_CHARTER_VOYAGE/ESTIMATED_ARRIVAL_DATE)[1]))"/>
      <xsl:variable name="v287" select="xdoxslt:convert_case(string(xdoxslt:one($v286)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v287))) > 10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v288', substring(string(xdoxslt:one($v287)), 1, 10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v288', $v287)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R5P10S90', xdoxslt:get_variable($_XDOCTX, '$v288'))"/>
   </xsl:template>
   <xsl:template name="SEQ_MAX_LXSequence">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 99999999-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_MAX_LXSequence_V', 99999999)"/>
   </xsl:template>
   <xsl:template name="SEQ_START_LXSequence">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 1-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_LXSequence_V', 1)"/>
   </xsl:template>
   <xsl:template name="SEQ_START_LX_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_LX_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L4R6P2S91">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('LX')),'NONE')-->
      <xsl:variable name="v289" select="string('LX')"/>
      <xsl:variable name="v290" select="xdoxslt:convert_case(string(xdoxslt:one($v289)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v290))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v291', substring(string(xdoxslt:one($v290)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v291', $v290)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L4R6P2S91', xdoxslt:get_variable($_XDOCTX, '$v291'))"/>
   </xsl:template>
   <xsl:template name="L4R6P1S92">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v292" select="string('*')"/>
      <xsl:variable name="v293" select="xdoxslt:convert_case(string(xdoxslt:one($v292)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v293))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v294', substring(string(xdoxslt:one($v293)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v294', $v293)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L4R6P1S92', xdoxslt:get_variable($_XDOCTX, '$v294'))"/>
   </xsl:template>
   <xsl:template name="L4R6P10S93">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((SEQUENCE_NUMBER(LXSequence)))-->
      <xsl:variable name="v295" select="xdoxslt:sequence_number($_XDOCTX, 'LXSequence')"/>
      <xsl:variable name="v296" select="xdoxslt:to_number(xdoxslt:one($v295))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v296))) > 10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v297', substring(string(xdoxslt:one($v296)), 1, 10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v297', $v296)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L4R6P10S93', xdoxslt:get_variable($_XDOCTX, '$v297'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_M13_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_M13_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="COND_v298">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID IN ('SCOULAR/NVO.AMS_NEW','SCOULAR/NVO.AMS_REVISED','SCOULAR/NVO.AMS_CANCEL')-->
      <xsl:variable name="v299" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_NEW' or xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_REVISED' or xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_CANCEL'"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COND_v298_V', $v299)"/>
   </xsl:template>
   <xsl:template name="L3R7P3S94">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('M13')),'NONE')-->
      <xsl:variable name="v300" select="string('M13')"/>
      <xsl:variable name="v301" select="xdoxslt:convert_case(string(xdoxslt:one($v300)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v301))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v302', substring(string(xdoxslt:one($v301)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v302', $v301)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P3S94', xdoxslt:get_variable($_XDOCTX, '$v302'))"/>
   </xsl:template>
   <xsl:template name="L3R7P1S95">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v303" select="string('*')"/>
      <xsl:variable name="v304" select="xdoxslt:convert_case(string(xdoxslt:one($v303)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v304))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v305', substring(string(xdoxslt:one($v304)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v305', $v304)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P1S95', xdoxslt:get_variable($_XDOCTX, '$v305'))"/>
   </xsl:template>
   <xsl:template name="L3R7P4S96">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((../../P_FILER_ID)),'NONE')-->
      <xsl:variable name="v306" select="string(xdoxslt:normalize_string($_XDOCTX, (../../P_FILER_ID)[1]))"/>
      <xsl:variable name="v307" select="xdoxslt:convert_case(string(xdoxslt:one($v306)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v307))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v308', substring(string(xdoxslt:one($v307)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v308', $v307)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P4S96', xdoxslt:get_variable($_XDOCTX, '$v308'))"/>
   </xsl:template>
   <xsl:template name="L3R7P1S97">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v309" select="string('*')"/>
      <xsl:variable name="v310" select="xdoxslt:convert_case(string(xdoxslt:one($v309)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v310))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v311', substring(string(xdoxslt:one($v310)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v311', $v310)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P1S97', xdoxslt:get_variable($_XDOCTX, '$v311'))"/>
   </xsl:template>
   <xsl:template name="L3R7P4S98">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_OTM_LOCATION/OTM_LOCATION/SCHEDULE_D_CODE)),'NONE')-->
      <xsl:variable name="v312" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_LOCATION/OTM_LOCATION/SCHEDULE_D_CODE)[1]))"/>
      <xsl:variable name="v313" select="xdoxslt:convert_case(string(xdoxslt:one($v312)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v313))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v314', substring(string(xdoxslt:one($v313)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v314', $v313)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P4S98', xdoxslt:get_variable($_XDOCTX, '$v314'))"/>
   </xsl:template>
   <xsl:template name="L3R7P1S99">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v315" select="string('*')"/>
      <xsl:variable name="v316" select="xdoxslt:convert_case(string(xdoxslt:one($v315)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v316))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v317', substring(string(xdoxslt:one($v316)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v317', $v316)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P1S99', xdoxslt:get_variable($_XDOCTX, '$v317'))"/>
   </xsl:template>
   <xsl:template name="L3R7P1S100">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((DECODE(LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID,'SCOULAR/NVO.AMS_FILE_NEW','A','SCOULAR/NVO.AMS_REVISED','R','SCOULAR/NVO.AMS_CANCEL','D',NULL))),'NONE')-->
      <xsl:variable name="v318" select="string('')"/>
      <xsl:variable name="v319t0" select="substring(string('A'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1])) = 'SCOULAR/NVO.AMS_FILE_NEW') * string-length(string('A')))"/>
      <xsl:variable name="v319t1" select="substring(string('R'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1])) = 'SCOULAR/NVO.AMS_REVISED') * string-length(string('R')))"/>
      <xsl:variable name="v319t2" select="substring(string('D'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1])) = 'SCOULAR/NVO.AMS_CANCEL') * string-length(string('D')))"/>
      <xsl:variable name="v319t3" select="substring(string(xdoxslt:one($v318)), 1, string-length(string(xdoxslt:one($v318))) * number(string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1])) != 'SCOULAR/NVO.AMS_FILE_NEW') * number(string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1])) != 'SCOULAR/NVO.AMS_REVISED') * number(string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1])) != 'SCOULAR/NVO.AMS_CANCEL'))"/>
      <xsl:variable name="v319" select="concat($v319t0, $v319t1, $v319t2, $v319t3)"/>
      <xsl:variable name="v320" select="string(xdoxslt:one($v319))"/>
      <xsl:variable name="v321" select="xdoxslt:convert_case(string(xdoxslt:one($v320)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v321))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v322', substring(string(xdoxslt:one($v321)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v322', $v321)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P1S100', xdoxslt:get_variable($_XDOCTX, '$v322'))"/>
   </xsl:template>
   <xsl:template name="L3R7P1S101">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v323" select="string('*')"/>
      <xsl:variable name="v324" select="xdoxslt:convert_case(string(xdoxslt:one($v323)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v324))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v325', substring(string(xdoxslt:one($v324)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v325', $v324)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P1S101', xdoxslt:get_variable($_XDOCTX, '$v325'))"/>
   </xsl:template>
   <xsl:template name="L3R7P12S102">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF LIST_OTM_JOB/OTM_JOB/JOB_XID  IS NOT NULL THEN
LIST_OTM_JOB/OTM_JOB/JOB_XID
ELSE
LIST_OTM_JOB/OTM_JOB/ATTRIBUTE13
END IF)),'NONE')-->
      <xsl:variable name="v326" select="xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_JOB/OTM_JOB/JOB_XID)[1]) != ''"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v327t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v326)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v327t', xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_JOB/OTM_JOB/JOB_XID)[1]))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v327t', xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_JOB/OTM_JOB/ATTRIBUTE13)[1]))"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:variable name="v327" select="xdoxslt:get_variable($_XDOCTX, 'v327t')"/>
      <xsl:variable name="v328" select="string(xdoxslt:one($v327))"/>
      <xsl:variable name="v329" select="xdoxslt:convert_case(string(xdoxslt:one($v328)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v329))) > 12">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v330', substring(string(xdoxslt:one($v329)), 1, 12))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v330', $v329)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P12S102', xdoxslt:get_variable($_XDOCTX, '$v330'))"/>
   </xsl:template>
   <xsl:template name="L3R7P1S103">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v331" select="string('*')"/>
      <xsl:variable name="v332" select="xdoxslt:convert_case(string(xdoxslt:one($v331)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v332))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v333', substring(string(xdoxslt:one($v332)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v333', $v332)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P1S103', xdoxslt:get_variable($_XDOCTX, '$v333'))"/>
   </xsl:template>
   <xsl:template name="L3R7P15S104">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((IF LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STAUS_VALUE_GID='SCOULAR/NVO.AMS_REPLACE' THEN
LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[GTM_QUANTITY_TYPE_GID='TOTAL SHIP UNIT COUNT']/QUANTITY_VALUE
END IF))-->
      <xsl:variable name="v334" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STAUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_REPLACE'"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v335t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v334)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v335t', xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[(GTM_QUANTITY_TYPE_GID)[1] = 'TOTAL SHIP UNIT COUNT']/QUANTITY_VALUE)[1]))"/>
         </xsl:when>
      </xsl:choose>
      <xsl:variable name="v335" select="xdoxslt:get_variable($_XDOCTX, 'v335t')"/>
      <xsl:variable name="v336" select="xdoxslt:to_number(xdoxslt:one($v335))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v336))) > 15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v337', substring(string(xdoxslt:one($v336)), 1, 15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v337', $v336)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P15S104', xdoxslt:get_variable($_XDOCTX, '$v337'))"/>
   </xsl:template>
   <xsl:template name="L3R7P1S105">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v338" select="string('*')"/>
      <xsl:variable name="v339" select="xdoxslt:convert_case(string(xdoxslt:one($v338)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v339))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v340', substring(string(xdoxslt:one($v339)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v340', $v339)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P1S105', xdoxslt:get_variable($_XDOCTX, '$v340'))"/>
   </xsl:template>
   <xsl:template name="L3R7P2S106">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_TRANS_REFNUM/GTM_TRANS_REFNUM[GTM_TRANS_REFNUM_QUAL_GID='SCOULAR/NVO.AMENDMENT REASON CODE']/REFNUM_VALUE)),'NONE')-->
      <xsl:variable name="v341" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANS_REFNUM/GTM_TRANS_REFNUM[(GTM_TRANS_REFNUM_QUAL_GID)[1] = 'SCOULAR/NVO.AMENDMENT REASON CODE']/REFNUM_VALUE)[1]))"/>
      <xsl:variable name="v342" select="xdoxslt:convert_case(string(xdoxslt:one($v341)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v342))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v343', substring(string(xdoxslt:one($v342)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v343', $v342)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P2S106', xdoxslt:get_variable($_XDOCTX, '$v343'))"/>
   </xsl:template>
   <xsl:template name="L3R7P1S107">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v344" select="string('*')"/>
      <xsl:variable name="v345" select="xdoxslt:convert_case(string(xdoxslt:one($v344)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v345))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v346', substring(string(xdoxslt:one($v345)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v346', $v345)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P1S107', xdoxslt:get_variable($_XDOCTX, '$v346'))"/>
   </xsl:template>
   <xsl:template name="L3R7P1S108">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v347" select="string('*')"/>
      <xsl:variable name="v348" select="xdoxslt:convert_case(string(xdoxslt:one($v347)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v348))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v349', substring(string(xdoxslt:one($v348)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v349', $v348)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P1S108', xdoxslt:get_variable($_XDOCTX, '$v349'))"/>
   </xsl:template>
   <xsl:template name="L3R7P1S109">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v350" select="string('*')"/>
      <xsl:variable name="v351" select="xdoxslt:convert_case(string(xdoxslt:one($v350)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v351))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v352', substring(string(xdoxslt:one($v351)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v352', $v351)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P1S109', xdoxslt:get_variable($_XDOCTX, '$v352'))"/>
   </xsl:template>
   <xsl:template name="L3R7P4S110">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((../../P_FILER_ID)),'NONE')-->
      <xsl:variable name="v353" select="string(xdoxslt:normalize_string($_XDOCTX, (../../P_FILER_ID)[1]))"/>
      <xsl:variable name="v354" select="xdoxslt:convert_case(string(xdoxslt:one($v353)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v354))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v355', substring(string(xdoxslt:one($v354)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v355', $v354)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R7P4S110', xdoxslt:get_variable($_XDOCTX, '$v355'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_M11_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_M11_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="COND_v356">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID IN ('SCOULAR/NVO.AMS_NEW','SCOULAR/NVO.AMS_REVISED','SCOULAR/NVO.AMS_CANCEL')-->
      <xsl:variable name="v357" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_NEW' or xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_REVISED' or xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_CANCEL'"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COND_v356_V', $v357)"/>
   </xsl:template>
   <xsl:template name="L3R8P3S111">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('M11')),'NONE')-->
      <xsl:variable name="v358" select="string('M11')"/>
      <xsl:variable name="v359" select="xdoxslt:convert_case(string(xdoxslt:one($v358)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v359))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v360', substring(string(xdoxslt:one($v359)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v360', $v359)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P3S111', xdoxslt:get_variable($_XDOCTX, '$v360'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S112">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v361" select="string('*')"/>
      <xsl:variable name="v362" select="xdoxslt:convert_case(string(xdoxslt:one($v361)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v362))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v363', substring(string(xdoxslt:one($v362)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v363', $v362)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S112', xdoxslt:get_variable($_XDOCTX, '$v363'))"/>
   </xsl:template>
   <xsl:template name="L3R8P12S113">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF LIST_OTM_JOB/OTM_JOB/ATTRIBUTE13
IS NOT NULL THEN
LIST_OTM_JOB/OTM_JOB/ATTRIBUTE13
ELSE
LIST_OTM_JOB/OTM_JOB/JOB_XID
END IF)),'NONE')-->
      <xsl:variable name="v364" select="xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_JOB/OTM_JOB/ATTRIBUTE13)[1]) != ''"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v365t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v364)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v365t', xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_JOB/OTM_JOB/ATTRIBUTE13)[1]))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v365t', xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_JOB/OTM_JOB/JOB_XID)[1]))"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:variable name="v365" select="xdoxslt:get_variable($_XDOCTX, 'v365t')"/>
      <xsl:variable name="v366" select="string(xdoxslt:one($v365))"/>
      <xsl:variable name="v367" select="xdoxslt:convert_case(string(xdoxslt:one($v366)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v367))) > 12">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v368', substring(string(xdoxslt:one($v367)), 1, 12))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v368', $v367)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P12S113', xdoxslt:get_variable($_XDOCTX, '$v368'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S114">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v369" select="string('*')"/>
      <xsl:variable name="v370" select="xdoxslt:convert_case(string(xdoxslt:one($v369)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v370))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v371', substring(string(xdoxslt:one($v370)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v371', $v370)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S114', xdoxslt:get_variable($_XDOCTX, '$v371'))"/>
   </xsl:template>
   <xsl:template name="L3R8P5S115">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF LIST_CHARTER_VOYAGE_REFNUM/CHARTER_VOYAGE_REFNUM/SCHEDULE_K IS NOT NULL THEN
LIST_CHARTER_VOYAGE_REFNUM/CHARTER_VOYAGE_REFNUM/SCHEDULE_K
ELSE
LIST_CHARTER_VOYAGE/CHARTER_VOYAGE/SCHEDULE_K
END IF)),'NONE')-->
      <xsl:variable name="v372" select="xdoxslt:normalize_string($_XDOCTX, (LIST_CHARTER_VOYAGE_REFNUM/CHARTER_VOYAGE_REFNUM/SCHEDULE_K)[1]) != ''"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v373t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v372)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v373t', xdoxslt:normalize_string($_XDOCTX, (LIST_CHARTER_VOYAGE_REFNUM/CHARTER_VOYAGE_REFNUM/SCHEDULE_K)[1]))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v373t', xdoxslt:normalize_string($_XDOCTX, (LIST_CHARTER_VOYAGE/CHARTER_VOYAGE/SCHEDULE_K)[1]))"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:variable name="v373" select="xdoxslt:get_variable($_XDOCTX, 'v373t')"/>
      <xsl:variable name="v374" select="string(xdoxslt:one($v373))"/>
      <xsl:variable name="v375" select="xdoxslt:convert_case(string(xdoxslt:one($v374)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v375))) > 5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v376', substring(string(xdoxslt:one($v375)), 1, 5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v376', $v375)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P5S115', xdoxslt:get_variable($_XDOCTX, '$v376'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S116">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v377" select="string('*')"/>
      <xsl:variable name="v378" select="xdoxslt:convert_case(string(xdoxslt:one($v377)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v378))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v379', substring(string(xdoxslt:one($v378)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v379', $v378)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S116', xdoxslt:get_variable($_XDOCTX, '$v379'))"/>
   </xsl:template>
   <xsl:template name="L3R8P15S117">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((LIST_S_SHIP_UNIT_REFNUM/S_SHIP_UNIT_REFNUM/QUANTITY_VALUE))-->
      <xsl:variable name="v380" select="xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, (LIST_S_SHIP_UNIT_REFNUM/S_SHIP_UNIT_REFNUM/QUANTITY_VALUE)[1]))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v380))) > 15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v381', substring(string(xdoxslt:one($v380)), 1, 15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v381', $v380)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P15S117', xdoxslt:get_variable($_XDOCTX, '$v381'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S118">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v382" select="string('*')"/>
      <xsl:variable name="v383" select="xdoxslt:convert_case(string(xdoxslt:one($v382)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v383))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v384', substring(string(xdoxslt:one($v383)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v384', $v383)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S118', xdoxslt:get_variable($_XDOCTX, '$v384'))"/>
   </xsl:template>
   <xsl:template name="L3R8P3S119">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_VID_GROUP/GTM_VID_GROUP/UNIT_CODE)),'NONE')-->
      <xsl:variable name="v385" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_VID_GROUP/GTM_VID_GROUP/UNIT_CODE)[1]))"/>
      <xsl:variable name="v386" select="xdoxslt:convert_case(string(xdoxslt:one($v385)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v386))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v387', substring(string(xdoxslt:one($v386)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v387', $v386)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P3S119', xdoxslt:get_variable($_XDOCTX, '$v387'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S120">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v388" select="string('*')"/>
      <xsl:variable name="v389" select="xdoxslt:convert_case(string(xdoxslt:one($v388)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v389))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v390', substring(string(xdoxslt:one($v389)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v390', $v389)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S120', xdoxslt:get_variable($_XDOCTX, '$v390'))"/>
   </xsl:template>
   <xsl:template name="L3R8P10S121">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[GTM_QUANTITY_TYPE_GID='TOTAL GROSS WEIGHT']/QUANTITY_VALUE))-->
      <xsl:variable name="v391" select="xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[(GTM_QUANTITY_TYPE_GID)[1] = 'TOTAL GROSS WEIGHT']/QUANTITY_VALUE)[1]))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v391))) > 10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v392', substring(string(xdoxslt:one($v391)), 1, 10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v392', $v391)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P10S121', xdoxslt:get_variable($_XDOCTX, '$v392'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S122">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v393" select="string('*')"/>
      <xsl:variable name="v394" select="xdoxslt:convert_case(string(xdoxslt:one($v393)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v394))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v395', substring(string(xdoxslt:one($v394)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v395', $v394)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S122', xdoxslt:get_variable($_XDOCTX, '$v395'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S123">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[GTM_QUANTITY_TYPE_GID='TOTAL GROSS WEIGHT']/UOM_CODE)),'NONE')-->
      <xsl:variable name="v396" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[(GTM_QUANTITY_TYPE_GID)[1] = 'TOTAL GROSS WEIGHT']/UOM_CODE)[1]))"/>
      <xsl:variable name="v397" select="xdoxslt:convert_case(string(xdoxslt:one($v396)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v397))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v398', substring(string(xdoxslt:one($v397)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v398', $v397)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S123', xdoxslt:get_variable($_XDOCTX, '$v398'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S124">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v399" select="string('*')"/>
      <xsl:variable name="v400" select="xdoxslt:convert_case(string(xdoxslt:one($v399)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v400))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v401', substring(string(xdoxslt:one($v400)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v401', $v400)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S124', xdoxslt:get_variable($_XDOCTX, '$v401'))"/>
   </xsl:template>
   <xsl:template name="L3R8P8S125">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[GTM_QUANTITY_TYPE_GID='TOTAL GROSS VOLUME']/QUANTITY_VALUE  IS NOT NULL THEN
LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[GTM_QUANTITY_TYPE_GID='TOTAL GROSS VOLUME']/QUANTITY_VALUE
END IF)),'NONE')-->
      <xsl:variable name="v402" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[(GTM_QUANTITY_TYPE_GID)[1] = 'TOTAL GROSS VOLUME']/QUANTITY_VALUE)[1]) != ''"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v403t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v402)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v403t', xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[(GTM_QUANTITY_TYPE_GID)[1] = 'TOTAL GROSS VOLUME']/QUANTITY_VALUE)[1]))"/>
         </xsl:when>
      </xsl:choose>
      <xsl:variable name="v403" select="xdoxslt:get_variable($_XDOCTX, 'v403t')"/>
      <xsl:variable name="v404" select="string(xdoxslt:one($v403))"/>
      <xsl:variable name="v405" select="xdoxslt:convert_case(string(xdoxslt:one($v404)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v405))) > 8">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v406', substring(string(xdoxslt:one($v405)), 1, 8))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v406', $v405)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P8S125', xdoxslt:get_variable($_XDOCTX, '$v406'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S126">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v407" select="string('*')"/>
      <xsl:variable name="v408" select="xdoxslt:convert_case(string(xdoxslt:one($v407)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v408))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v409', substring(string(xdoxslt:one($v408)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v409', $v408)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S126', xdoxslt:get_variable($_XDOCTX, '$v409'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S127">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[GTM_QUANTITY_TYPE_GID='TOTAL GROSS VOLUME']/UOM_CODE IS NOT NULL THEN
LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[GTM_QUANTITY_TYPE_GID='TOTAL GROSS VOLUME']/UOM_CODE
END IF)),'NONE')-->
      <xsl:variable name="v410" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[(GTM_QUANTITY_TYPE_GID)[1] = 'TOTAL GROSS VOLUME']/UOM_CODE)[1]) != ''"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v411t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v410)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v411t', xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_QUANTITY/GTM_TRANSACTION_QUANTITY[(GTM_QUANTITY_TYPE_GID)[1] = 'TOTAL GROSS VOLUME']/UOM_CODE)[1]))"/>
         </xsl:when>
      </xsl:choose>
      <xsl:variable name="v411" select="xdoxslt:get_variable($_XDOCTX, 'v411t')"/>
      <xsl:variable name="v412" select="string(xdoxslt:one($v411))"/>
      <xsl:variable name="v413" select="xdoxslt:convert_case(string(xdoxslt:one($v412)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v413))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v414', substring(string(xdoxslt:one($v413)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v414', $v413)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S127', xdoxslt:get_variable($_XDOCTX, '$v414'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S128">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v415" select="string('*')"/>
      <xsl:variable name="v416" select="xdoxslt:convert_case(string(xdoxslt:one($v415)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v416))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v417', substring(string(xdoxslt:one($v416)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v417', $v416)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S128', xdoxslt:get_variable($_XDOCTX, '$v417'))"/>
   </xsl:template>
   <xsl:template name="L3R8P2S129">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_BL_TYPE_CODE/GTM_BL_TYPE_CODE/BL_TYPE)),'NONE')-->
      <xsl:variable name="v418" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_BL_TYPE_CODE/GTM_BL_TYPE_CODE/BL_TYPE)[1]))"/>
      <xsl:variable name="v419" select="xdoxslt:convert_case(string(xdoxslt:one($v418)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v419))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v420', substring(string(xdoxslt:one($v419)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v420', $v419)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P2S129', xdoxslt:get_variable($_XDOCTX, '$v420'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S130">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v421" select="string('*')"/>
      <xsl:variable name="v422" select="xdoxslt:convert_case(string(xdoxslt:one($v421)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v422))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v423', substring(string(xdoxslt:one($v422)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v423', $v422)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S130', xdoxslt:get_variable($_XDOCTX, '$v423'))"/>
   </xsl:template>
   <xsl:template name="L3R8P17S131">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_OTM_LOCATION_ID/OTM_LOCATION_ID/LOCATION_ID)),'NONE')-->
      <xsl:variable name="v424" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_LOCATION_ID/OTM_LOCATION_ID/LOCATION_ID)[1]))"/>
      <xsl:variable name="v425" select="xdoxslt:convert_case(string(xdoxslt:one($v424)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v425))) > 17">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v426', substring(string(xdoxslt:one($v425)), 1, 17))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v426', $v425)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P17S131', xdoxslt:get_variable($_XDOCTX, '$v426'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S132">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v427" select="string('*')"/>
      <xsl:variable name="v428" select="xdoxslt:convert_case(string(xdoxslt:one($v427)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v428))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v429', substring(string(xdoxslt:one($v428)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v429', $v428)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S132', xdoxslt:get_variable($_XDOCTX, '$v429'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S133">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v430" select="string('*')"/>
      <xsl:variable name="v431" select="xdoxslt:convert_case(string(xdoxslt:one($v430)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v431))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v432', substring(string(xdoxslt:one($v431)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v432', $v431)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S133', xdoxslt:get_variable($_XDOCTX, '$v432'))"/>
   </xsl:template>
   <xsl:template name="L3R8P4S134">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((../../P_FILER_ID)),'NONE')-->
      <xsl:variable name="v433" select="string(xdoxslt:normalize_string($_XDOCTX, (../../P_FILER_ID)[1]))"/>
      <xsl:variable name="v434" select="xdoxslt:convert_case(string(xdoxslt:one($v433)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v434))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v435', substring(string(xdoxslt:one($v434)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v435', $v434)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P4S134', xdoxslt:get_variable($_XDOCTX, '$v435'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S135">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v436" select="string('*')"/>
      <xsl:variable name="v437" select="xdoxslt:convert_case(string(xdoxslt:one($v436)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v437))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v438', substring(string(xdoxslt:one($v437)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v438', $v437)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S135', xdoxslt:get_variable($_XDOCTX, '$v438'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S136">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v439" select="string('*')"/>
      <xsl:variable name="v440" select="xdoxslt:convert_case(string(xdoxslt:one($v439)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v440))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v441', substring(string(xdoxslt:one($v440)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v441', $v440)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S136', xdoxslt:get_variable($_XDOCTX, '$v441'))"/>
   </xsl:template>
   <xsl:template name="L3R8P4S137">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_OTM_SHIPMENT_SVP/OTM_SHIPMENT_SVP/SCAC_GID)),'NONE')-->
      <xsl:variable name="v442" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_SHIPMENT_SVP/OTM_SHIPMENT_SVP/SCAC_GID)[1]))"/>
      <xsl:variable name="v443" select="xdoxslt:convert_case(string(xdoxslt:one($v442)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v443))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v444', substring(string(xdoxslt:one($v443)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v444', $v443)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P4S137', xdoxslt:get_variable($_XDOCTX, '$v444'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S138">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v445" select="string('*')"/>
      <xsl:variable name="v446" select="xdoxslt:convert_case(string(xdoxslt:one($v445)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v446))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v447', substring(string(xdoxslt:one($v446)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v447', $v446)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S138', xdoxslt:get_variable($_XDOCTX, '$v447'))"/>
   </xsl:template>
   <xsl:template name="L3R8P4S139">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF LIST_GTM_SHIPMENT_INVOLVED_PARTY/GTM_SHIPMENT_INVOLVED_PARTY [INVOLVED_PARTY_QUAL_GID='SCOULAR.ALSO NOTIFY']/SCAC_GID  IS NOT NULL
THEN
LIST_GTM_SHIPMENT_INVOLVED_PARTY/GTM_SHIPMENT_INVOLVED_PARTY [INVOLVED_PARTY_QUAL_GID='SCOULAR.ALSO NOTIFY']/SCAC_GID 
ELSE
LIST_OTM_LOCATION_REFNUM/OTM_LOCATION_REFNUM/LOCATION_REFNUM_VALUE
END IF)),'NONE')-->
      <xsl:variable name="v448" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_SHIPMENT_INVOLVED_PARTY/GTM_SHIPMENT_INVOLVED_PARTY[(INVOLVED_PARTY_QUAL_GID)[1] = 'SCOULAR.ALSO NOTIFY']/SCAC_GID)[1]) != ''"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v449t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v448)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v449t', xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_SHIPMENT_INVOLVED_PARTY/GTM_SHIPMENT_INVOLVED_PARTY[(INVOLVED_PARTY_QUAL_GID)[1] = 'SCOULAR.ALSO NOTIFY']/SCAC_GID)[1]))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v449t', xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_LOCATION_REFNUM/OTM_LOCATION_REFNUM/LOCATION_REFNUM_VALUE)[1]))"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:variable name="v449" select="xdoxslt:get_variable($_XDOCTX, 'v449t')"/>
      <xsl:variable name="v450" select="string(xdoxslt:one($v449))"/>
      <xsl:variable name="v451" select="xdoxslt:convert_case(string(xdoxslt:one($v450)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v451))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v452', substring(string(xdoxslt:one($v451)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v452', $v451)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P4S139', xdoxslt:get_variable($_XDOCTX, '$v452'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S140">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v453" select="string('*')"/>
      <xsl:variable name="v454" select="xdoxslt:convert_case(string(xdoxslt:one($v453)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v454))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v455', substring(string(xdoxslt:one($v454)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v455', $v454)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S140', xdoxslt:get_variable($_XDOCTX, '$v455'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S141">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v456" select="string('*')"/>
      <xsl:variable name="v457" select="xdoxslt:convert_case(string(xdoxslt:one($v456)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v457))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v458', substring(string(xdoxslt:one($v457)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v458', $v457)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S141', xdoxslt:get_variable($_XDOCTX, '$v458'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S142">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v459" select="string('*')"/>
      <xsl:variable name="v460" select="xdoxslt:convert_case(string(xdoxslt:one($v459)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v460))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v461', substring(string(xdoxslt:one($v460)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v461', $v460)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S142', xdoxslt:get_variable($_XDOCTX, '$v461'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S143">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v462" select="string('*')"/>
      <xsl:variable name="v463" select="xdoxslt:convert_case(string(xdoxslt:one($v462)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v463))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v464', substring(string(xdoxslt:one($v463)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v464', $v463)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S143', xdoxslt:get_variable($_XDOCTX, '$v464'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S144">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v465" select="string('*')"/>
      <xsl:variable name="v466" select="xdoxslt:convert_case(string(xdoxslt:one($v465)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v466))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v467', substring(string(xdoxslt:one($v466)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v467', $v466)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S144', xdoxslt:get_variable($_XDOCTX, '$v467'))"/>
   </xsl:template>
   <xsl:template name="L3R8P30S145">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF
LIST_CHARTER_VOYAGE_REFNUM/CHARTER_VOYAGE_REFNUM/SCHEDULE_K IS NOT NULL
THEN
LIST_CHARTER_VOYAGE_REFNUM/CHARTER_VOYAGE_REFNUM/SCHEDULE_K 
ELSE
LIST_CHARTER_VOYAGE/CHARTER_VOYAGE/SCHEDULE_K
END IF)),'NONE')-->
      <xsl:variable name="v468" select="xdoxslt:normalize_string($_XDOCTX, (LIST_CHARTER_VOYAGE_REFNUM/CHARTER_VOYAGE_REFNUM/SCHEDULE_K)[1]) != ''"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v469t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v468)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v469t', xdoxslt:normalize_string($_XDOCTX, (LIST_CHARTER_VOYAGE_REFNUM/CHARTER_VOYAGE_REFNUM/SCHEDULE_K)[1]))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v469t', xdoxslt:normalize_string($_XDOCTX, (LIST_CHARTER_VOYAGE/CHARTER_VOYAGE/SCHEDULE_K)[1]))"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:variable name="v469" select="xdoxslt:get_variable($_XDOCTX, 'v469t')"/>
      <xsl:variable name="v470" select="string(xdoxslt:one($v469))"/>
      <xsl:variable name="v471" select="xdoxslt:convert_case(string(xdoxslt:one($v470)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v471))) > 30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v472', substring(string(xdoxslt:one($v471)), 1, 30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v472', $v471)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P30S145', xdoxslt:get_variable($_XDOCTX, '$v472'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S146">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v473" select="string('*')"/>
      <xsl:variable name="v474" select="xdoxslt:convert_case(string(xdoxslt:one($v473)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v474))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v475', substring(string(xdoxslt:one($v474)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v475', $v474)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S146', xdoxslt:get_variable($_XDOCTX, '$v475'))"/>
   </xsl:template>
   <xsl:template name="L3R8P30S147">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_TRANSACTION_PORT/GTM_TRANSACTION_PORT[LOCATION_REFNUM_QUAL_GID='SCHEDULE_K']/LOCATION_REFNUM_VALUE)),'NONE')-->
      <xsl:variable name="v476" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_PORT/GTM_TRANSACTION_PORT[(LOCATION_REFNUM_QUAL_GID)[1] = 'SCHEDULE_K']/LOCATION_REFNUM_VALUE)[1]))"/>
      <xsl:variable name="v477" select="xdoxslt:convert_case(string(xdoxslt:one($v476)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v477))) > 30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v478', substring(string(xdoxslt:one($v477)), 1, 30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v478', $v477)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P30S147', xdoxslt:get_variable($_XDOCTX, '$v478'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S148">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v479" select="string('*')"/>
      <xsl:variable name="v480" select="xdoxslt:convert_case(string(xdoxslt:one($v479)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v480))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v481', substring(string(xdoxslt:one($v480)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v481', $v480)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S148', xdoxslt:get_variable($_XDOCTX, '$v481'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S149">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v482" select="string('*')"/>
      <xsl:variable name="v483" select="xdoxslt:convert_case(string(xdoxslt:one($v482)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v483))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v484', substring(string(xdoxslt:one($v483)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v484', $v483)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S149', xdoxslt:get_variable($_XDOCTX, '$v484'))"/>
   </xsl:template>
   <xsl:template name="L3R8P1S150">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v485" select="string('*')"/>
      <xsl:variable name="v486" select="xdoxslt:convert_case(string(xdoxslt:one($v485)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v486))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v487', substring(string(xdoxslt:one($v486)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v487', $v486)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R8P1S150', xdoxslt:get_variable($_XDOCTX, '$v487'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_N9_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_N9_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="COND_v488">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression:  LIST_OTM_JOB/OTM_JOB/ATTRIBUTE5 IS NOT NULL AND LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID NOT IN('SCOULAR/NVO.AMS_CANCEL**')-->
      <xsl:variable name="v489" select="xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_JOB/OTM_JOB/ATTRIBUTE5)[1]) != ''"/>
      <xsl:variable name="v490" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_CANCEL**'"/>
      <xsl:variable name="v491" select="not(xdoxslt:one($v490))"/>
      <xsl:variable name="v492" select="xdoxslt:one($v489) and xdoxslt:one($v491)"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COND_v488_V', $v492)"/>
   </xsl:template>
   <xsl:template name="L3R9P2S151">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('N9')),'NONE')-->
      <xsl:variable name="v493" select="string('N9')"/>
      <xsl:variable name="v494" select="xdoxslt:convert_case(string(xdoxslt:one($v493)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v494))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v495', substring(string(xdoxslt:one($v494)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v495', $v494)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P2S151', xdoxslt:get_variable($_XDOCTX, '$v495'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S152">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v496" select="string('*')"/>
      <xsl:variable name="v497" select="xdoxslt:convert_case(string(xdoxslt:one($v496)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v497))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v498', substring(string(xdoxslt:one($v497)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v498', $v497)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S152', xdoxslt:get_variable($_XDOCTX, '$v498'))"/>
   </xsl:template>
   <xsl:template name="L3R9P3S153">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('OB')),'NONE')-->
      <xsl:variable name="v499" select="string('OB')"/>
      <xsl:variable name="v500" select="xdoxslt:convert_case(string(xdoxslt:one($v499)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v500))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v501', substring(string(xdoxslt:one($v500)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v501', $v500)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P3S153', xdoxslt:get_variable($_XDOCTX, '$v501'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S154">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v502" select="string('*')"/>
      <xsl:variable name="v503" select="xdoxslt:convert_case(string(xdoxslt:one($v502)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v503))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v504', substring(string(xdoxslt:one($v503)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v504', $v503)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S154', xdoxslt:get_variable($_XDOCTX, '$v504'))"/>
   </xsl:template>
   <xsl:template name="L3R9P30S155">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_OTM_JOB/OTM_JOB/ATTRIBUTE5)),'NONE')-->
      <xsl:variable name="v505" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_JOB/OTM_JOB/ATTRIBUTE5)[1]))"/>
      <xsl:variable name="v506" select="xdoxslt:convert_case(string(xdoxslt:one($v505)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v506))) > 30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v507', substring(string(xdoxslt:one($v506)), 1, 30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v507', $v506)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P30S155', xdoxslt:get_variable($_XDOCTX, '$v507'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S156">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v508" select="string('*')"/>
      <xsl:variable name="v509" select="xdoxslt:convert_case(string(xdoxslt:one($v508)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v509))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v510', substring(string(xdoxslt:one($v509)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v510', $v509)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S156', xdoxslt:get_variable($_XDOCTX, '$v510'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S157">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v511" select="string('*')"/>
      <xsl:variable name="v512" select="xdoxslt:convert_case(string(xdoxslt:one($v511)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v512))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v513', substring(string(xdoxslt:one($v512)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v513', $v512)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S157', xdoxslt:get_variable($_XDOCTX, '$v513'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S158">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v514" select="string('*')"/>
      <xsl:variable name="v515" select="xdoxslt:convert_case(string(xdoxslt:one($v514)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v515))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v516', substring(string(xdoxslt:one($v515)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v516', $v515)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S158', xdoxslt:get_variable($_XDOCTX, '$v516'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S159">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v517" select="string('*')"/>
      <xsl:variable name="v518" select="xdoxslt:convert_case(string(xdoxslt:one($v517)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v518))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v519', substring(string(xdoxslt:one($v518)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v519', $v518)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S159', xdoxslt:get_variable($_XDOCTX, '$v519'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S160">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v520" select="string('*')"/>
      <xsl:variable name="v521" select="xdoxslt:convert_case(string(xdoxslt:one($v520)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v521))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v522', substring(string(xdoxslt:one($v521)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v522', $v521)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S160', xdoxslt:get_variable($_XDOCTX, '$v522'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S161">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v523" select="string('*')"/>
      <xsl:variable name="v524" select="xdoxslt:convert_case(string(xdoxslt:one($v523)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v524))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v525', substring(string(xdoxslt:one($v524)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v525', $v524)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S161', xdoxslt:get_variable($_XDOCTX, '$v525'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S162">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v526" select="string('*')"/>
      <xsl:variable name="v527" select="xdoxslt:convert_case(string(xdoxslt:one($v526)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v527))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v528', substring(string(xdoxslt:one($v527)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v528', $v527)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S162', xdoxslt:get_variable($_XDOCTX, '$v528'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S163">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v529" select="string('*')"/>
      <xsl:variable name="v530" select="xdoxslt:convert_case(string(xdoxslt:one($v529)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v530))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v531', substring(string(xdoxslt:one($v530)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v531', $v530)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S163', xdoxslt:get_variable($_XDOCTX, '$v531'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S164">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v532" select="string('*')"/>
      <xsl:variable name="v533" select="xdoxslt:convert_case(string(xdoxslt:one($v532)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v533))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v534', substring(string(xdoxslt:one($v533)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v534', $v533)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S164', xdoxslt:get_variable($_XDOCTX, '$v534'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S165">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v535" select="string('*')"/>
      <xsl:variable name="v536" select="xdoxslt:convert_case(string(xdoxslt:one($v535)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v536))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v537', substring(string(xdoxslt:one($v536)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v537', $v536)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S165', xdoxslt:get_variable($_XDOCTX, '$v537'))"/>
   </xsl:template>
   <xsl:template name="L3R9P1S166">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v538" select="string('*')"/>
      <xsl:variable name="v539" select="xdoxslt:convert_case(string(xdoxslt:one($v538)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v539))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v540', substring(string(xdoxslt:one($v539)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v540', $v539)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R9P1S166', xdoxslt:get_variable($_XDOCTX, '$v540'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_N1_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_N1_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="COND_v541">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression:  LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID NOT IN('SCOULAR/NVO.AMS_CANCEL')-->
      <xsl:variable name="v542" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_CANCEL'"/>
      <xsl:variable name="v543" select="not(xdoxslt:one($v542))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COND_v541_V', $v543)"/>
   </xsl:template>
   <xsl:template name="L5R10P2S167">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('N1')),'NONE')-->
      <xsl:variable name="v544" select="string('N1')"/>
      <xsl:variable name="v545" select="xdoxslt:convert_case(string(xdoxslt:one($v544)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v545))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v546', substring(string(xdoxslt:one($v545)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v546', $v545)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R10P2S167', xdoxslt:get_variable($_XDOCTX, '$v546'))"/>
   </xsl:template>
   <xsl:template name="L5R10P1S168">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v547" select="string('*')"/>
      <xsl:variable name="v548" select="xdoxslt:convert_case(string(xdoxslt:one($v547)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v548))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v549', substring(string(xdoxslt:one($v548)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v549', $v548)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R10P1S168', xdoxslt:get_variable($_XDOCTX, '$v549'))"/>
   </xsl:template>
   <xsl:template name="L5R10P3S169">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((DECODE(INVOLVED_PARTY_QUAL_GID,'SHIPPER','SH','CONSIGNEE','CN'))),'NONE')-->
      <xsl:variable name="v550t0" select="substring(string('SH'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//INVOLVED_PARTY_QUAL_GID)[1])) = 'SHIPPER') * string-length(string('SH')))"/>
      <xsl:variable name="v550t1" select="substring(string('CN'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//INVOLVED_PARTY_QUAL_GID)[1])) = 'CONSIGNEE') * string-length(string('CN')))"/>
      <xsl:variable name="v550" select="concat($v550t0, $v550t1)"/>
      <xsl:variable name="v551" select="string(xdoxslt:one($v550))"/>
      <xsl:variable name="v552" select="xdoxslt:convert_case(string(xdoxslt:one($v551)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v552))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v553', substring(string(xdoxslt:one($v552)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v553', $v552)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R10P3S169', xdoxslt:get_variable($_XDOCTX, '$v553'))"/>
   </xsl:template>
   <xsl:template name="L5R10P1S170">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v554" select="string('*')"/>
      <xsl:variable name="v555" select="xdoxslt:convert_case(string(xdoxslt:one($v554)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v555))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v556', substring(string(xdoxslt:one($v555)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v556', $v555)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R10P1S170', xdoxslt:get_variable($_XDOCTX, '$v556'))"/>
   </xsl:template>
   <xsl:template name="L5R10P60S171">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LOCATION_NAME)),'NONE')-->
      <xsl:variable name="v557" select="string(xdoxslt:normalize_string($_XDOCTX, (.//LOCATION_NAME)[1]))"/>
      <xsl:variable name="v558" select="xdoxslt:convert_case(string(xdoxslt:one($v557)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v558))) > 60">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v559', substring(string(xdoxslt:one($v558)), 1, 60))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v559', $v558)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R10P60S171', xdoxslt:get_variable($_XDOCTX, '$v559'))"/>
   </xsl:template>
   <xsl:template name="L5R10P1S172">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v560" select="string('*')"/>
      <xsl:variable name="v561" select="xdoxslt:convert_case(string(xdoxslt:one($v560)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v561))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v562', substring(string(xdoxslt:one($v561)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v562', $v561)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R10P1S172', xdoxslt:get_variable($_XDOCTX, '$v562'))"/>
   </xsl:template>
   <xsl:template name="L5R10P2S173">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((ID_Code_Qualifier)),'NONE')-->
      <xsl:variable name="v563" select="string(xdoxslt:normalize_string($_XDOCTX, (.//ID_Code_Qualifier)[1]))"/>
      <xsl:variable name="v564" select="xdoxslt:convert_case(string(xdoxslt:one($v563)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v564))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v565', substring(string(xdoxslt:one($v564)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v565', $v564)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R10P2S173', xdoxslt:get_variable($_XDOCTX, '$v565'))"/>
   </xsl:template>
   <xsl:template name="L5R10P1S174">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v566" select="string('*')"/>
      <xsl:variable name="v567" select="xdoxslt:convert_case(string(xdoxslt:one($v566)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v567))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v568', substring(string(xdoxslt:one($v567)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v568', $v567)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R10P1S174', xdoxslt:get_variable($_XDOCTX, '$v568'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_N3_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_N3_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="COND_v569">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression:  LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID NOT IN('SCOULAR/NVO.AMS_CANCEL')-->
      <xsl:variable name="v570" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_CANCEL'"/>
      <xsl:variable name="v571" select="not(xdoxslt:one($v570))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COND_v569_V', $v571)"/>
   </xsl:template>
   <xsl:template name="L5R11P2S175">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('N3')),'NONE')-->
      <xsl:variable name="v572" select="string('N3')"/>
      <xsl:variable name="v573" select="xdoxslt:convert_case(string(xdoxslt:one($v572)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v573))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v574', substring(string(xdoxslt:one($v573)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v574', $v573)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R11P2S175', xdoxslt:get_variable($_XDOCTX, '$v574'))"/>
   </xsl:template>
   <xsl:template name="L5R11P1S176">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v575" select="string('*')"/>
      <xsl:variable name="v576" select="xdoxslt:convert_case(string(xdoxslt:one($v575)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v576))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v577', substring(string(xdoxslt:one($v576)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v577', $v576)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R11P1S176', xdoxslt:get_variable($_XDOCTX, '$v577'))"/>
   </xsl:template>
   <xsl:template name="L5R11P55S177">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF ADDLINE1 IS NULL
THEN
ADDLINE2
ELSE
ADDLINE1
END IF)),'NONE')-->
      <xsl:variable name="v578" select="xdoxslt:normalize_string($_XDOCTX, (.//ADDLINE1)[1]) = ''"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v579t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v578)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v579t', xdoxslt:normalize_string($_XDOCTX, (.//ADDLINE2)[1]))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v579t', xdoxslt:normalize_string($_XDOCTX, (.//ADDLINE1)[1]))"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:variable name="v579" select="xdoxslt:get_variable($_XDOCTX, 'v579t')"/>
      <xsl:variable name="v580" select="string(xdoxslt:one($v579))"/>
      <xsl:variable name="v581" select="xdoxslt:convert_case(string(xdoxslt:one($v580)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v581))) > 55">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v582', substring(string(xdoxslt:one($v581)), 1, 55))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v582', $v581)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R11P55S177', xdoxslt:get_variable($_XDOCTX, '$v582'))"/>
   </xsl:template>
   <xsl:template name="L5R11P1S178">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v583" select="string('*')"/>
      <xsl:variable name="v584" select="xdoxslt:convert_case(string(xdoxslt:one($v583)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v584))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v585', substring(string(xdoxslt:one($v584)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v585', $v584)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R11P1S178', xdoxslt:get_variable($_XDOCTX, '$v585'))"/>
   </xsl:template>
   <xsl:template name="L5R11P55S179">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF ADDLINE1 IS NOT NULL  AND ADDLINE2 IS NOT NULL THEN
ADDLINE2
END IF)),'NONE')-->
      <xsl:variable name="v586" select="xdoxslt:normalize_string($_XDOCTX, (.//ADDLINE1)[1]) != ''"/>
      <xsl:variable name="v587" select="xdoxslt:normalize_string($_XDOCTX, (.//ADDLINE2)[1]) != ''"/>
      <xsl:variable name="v588" select="xdoxslt:one($v586) and xdoxslt:one($v587)"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v589t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v588)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v589t', xdoxslt:normalize_string($_XDOCTX, (.//ADDLINE2)[1]))"/>
         </xsl:when>
      </xsl:choose>
      <xsl:variable name="v589" select="xdoxslt:get_variable($_XDOCTX, 'v589t')"/>
      <xsl:variable name="v590" select="string(xdoxslt:one($v589))"/>
      <xsl:variable name="v591" select="xdoxslt:convert_case(string(xdoxslt:one($v590)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v591))) > 55">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v592', substring(string(xdoxslt:one($v591)), 1, 55))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v592', $v591)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R11P55S179', xdoxslt:get_variable($_XDOCTX, '$v592'))"/>
   </xsl:template>
   <xsl:template name="L5R11P1S180">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v593" select="string('*')"/>
      <xsl:variable name="v594" select="xdoxslt:convert_case(string(xdoxslt:one($v593)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v594))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v595', substring(string(xdoxslt:one($v594)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v595', $v594)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R11P1S180', xdoxslt:get_variable($_XDOCTX, '$v595'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_N4_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_N4_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L5R12P2S181">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('N4')),'NONE')-->
      <xsl:variable name="v596" select="string('N4')"/>
      <xsl:variable name="v597" select="xdoxslt:convert_case(string(xdoxslt:one($v596)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v597))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v598', substring(string(xdoxslt:one($v597)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v598', $v597)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12P2S181', xdoxslt:get_variable($_XDOCTX, '$v598'))"/>
   </xsl:template>
   <xsl:template name="L5R12P1S182">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v599" select="string('*')"/>
      <xsl:variable name="v600" select="xdoxslt:convert_case(string(xdoxslt:one($v599)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v600))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v601', substring(string(xdoxslt:one($v600)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v601', $v600)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12P1S182', xdoxslt:get_variable($_XDOCTX, '$v601'))"/>
   </xsl:template>
   <xsl:template name="L5R12P30S183">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CITY)),'NONE')-->
      <xsl:variable name="v602" select="string(xdoxslt:normalize_string($_XDOCTX, (.//CITY)[1]))"/>
      <xsl:variable name="v603" select="xdoxslt:convert_case(string(xdoxslt:one($v602)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v603))) > 30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v604', substring(string(xdoxslt:one($v603)), 1, 30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v604', $v603)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12P30S183', xdoxslt:get_variable($_XDOCTX, '$v604'))"/>
   </xsl:template>
   <xsl:template name="L5R12P1S184">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v605" select="string('*')"/>
      <xsl:variable name="v606" select="xdoxslt:convert_case(string(xdoxslt:one($v605)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v606))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v607', substring(string(xdoxslt:one($v606)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v607', $v606)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12P1S184', xdoxslt:get_variable($_XDOCTX, '$v607'))"/>
   </xsl:template>
   <xsl:template name="L5R12P2S185">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((PROVINCE_CODE)),'NONE')-->
      <xsl:variable name="v608" select="string(xdoxslt:normalize_string($_XDOCTX, (.//PROVINCE_CODE)[1]))"/>
      <xsl:variable name="v609" select="xdoxslt:convert_case(string(xdoxslt:one($v608)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v609))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v610', substring(string(xdoxslt:one($v609)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v610', $v609)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12P2S185', xdoxslt:get_variable($_XDOCTX, '$v610'))"/>
   </xsl:template>
   <xsl:template name="L5R12P1S186">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v611" select="string('*')"/>
      <xsl:variable name="v612" select="xdoxslt:convert_case(string(xdoxslt:one($v611)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v612))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v613', substring(string(xdoxslt:one($v612)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v613', $v612)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12P1S186', xdoxslt:get_variable($_XDOCTX, '$v613'))"/>
   </xsl:template>
   <xsl:template name="L5R12P15S187">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((POSTAL_CODE)),'NONE')-->
      <xsl:variable name="v614" select="string(xdoxslt:normalize_string($_XDOCTX, (.//POSTAL_CODE)[1]))"/>
      <xsl:variable name="v615" select="xdoxslt:convert_case(string(xdoxslt:one($v614)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v615))) > 15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v616', substring(string(xdoxslt:one($v615)), 1, 15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v616', $v615)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12P15S187', xdoxslt:get_variable($_XDOCTX, '$v616'))"/>
   </xsl:template>
   <xsl:template name="L5R12P1S188">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v617" select="string('*')"/>
      <xsl:variable name="v618" select="xdoxslt:convert_case(string(xdoxslt:one($v617)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v618))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v619', substring(string(xdoxslt:one($v618)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v619', $v618)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12P1S188', xdoxslt:get_variable($_XDOCTX, '$v619'))"/>
   </xsl:template>
   <xsl:template name="L5R12P3S189">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((COUNTRY_CODE2)),'NONE')-->
      <xsl:variable name="v620" select="string(xdoxslt:normalize_string($_XDOCTX, (.//COUNTRY_CODE2)[1]))"/>
      <xsl:variable name="v621" select="xdoxslt:convert_case(string(xdoxslt:one($v620)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v621))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v622', substring(string(xdoxslt:one($v621)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v622', $v621)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12P3S189', xdoxslt:get_variable($_XDOCTX, '$v622'))"/>
   </xsl:template>
   <xsl:template name="L5R12P1S190">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v623" select="string('*')"/>
      <xsl:variable name="v624" select="xdoxslt:convert_case(string(xdoxslt:one($v623)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v624))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v625', substring(string(xdoxslt:one($v624)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v625', $v624)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12P1S190', xdoxslt:get_variable($_XDOCTX, '$v625'))"/>
   </xsl:template>
   <xsl:template name="L5R12P1S191">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v626" select="string('*')"/>
      <xsl:variable name="v627" select="xdoxslt:convert_case(string(xdoxslt:one($v626)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v627))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v628', substring(string(xdoxslt:one($v627)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v628', $v627)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12P1S191', xdoxslt:get_variable($_XDOCTX, '$v628'))"/>
   </xsl:template>
   <xsl:template name="L5R12P1S192">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v629" select="string('*')"/>
      <xsl:variable name="v630" select="xdoxslt:convert_case(string(xdoxslt:one($v629)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v630))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v631', substring(string(xdoxslt:one($v630)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v631', $v630)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R12P1S192', xdoxslt:get_variable($_XDOCTX, '$v631'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_PER_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_PER_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="COND_v632">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression:  LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID NOT IN('SCOULAR/NVO.AMS_CANCEL')-->
      <xsl:variable name="v633" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_CANCEL'"/>
      <xsl:variable name="v634" select="not(xdoxslt:one($v633))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COND_v632_V', $v634)"/>
   </xsl:template>
   <xsl:template name="L5R13P3S193">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('PER')),'NONE')-->
      <xsl:variable name="v635" select="string('PER')"/>
      <xsl:variable name="v636" select="xdoxslt:convert_case(string(xdoxslt:one($v635)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v636))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v637', substring(string(xdoxslt:one($v636)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v637', $v636)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P3S193', xdoxslt:get_variable($_XDOCTX, '$v637'))"/>
   </xsl:template>
   <xsl:template name="L5R13P1S194">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v638" select="string('*')"/>
      <xsl:variable name="v639" select="xdoxslt:convert_case(string(xdoxslt:one($v638)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v639))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v640', substring(string(xdoxslt:one($v639)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v640', $v639)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P1S194', xdoxslt:get_variable($_XDOCTX, '$v640'))"/>
   </xsl:template>
   <xsl:template name="L5R13P2S195">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('IC')),'NONE')-->
      <xsl:variable name="v641" select="string('IC')"/>
      <xsl:variable name="v642" select="xdoxslt:convert_case(string(xdoxslt:one($v641)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v642))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v643', substring(string(xdoxslt:one($v642)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v643', $v642)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P2S195', xdoxslt:get_variable($_XDOCTX, '$v643'))"/>
   </xsl:template>
   <xsl:template name="L5R13P1S196">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v644" select="string('*')"/>
      <xsl:variable name="v645" select="xdoxslt:convert_case(string(xdoxslt:one($v644)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v645))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v646', substring(string(xdoxslt:one($v645)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v646', $v645)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P1S196', xdoxslt:get_variable($_XDOCTX, '$v646'))"/>
   </xsl:template>
   <xsl:template name="L5R13P23S197">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((../../../../P_CONTACT_NAME)),'NONE')-->
      <xsl:variable name="v647" select="string(xdoxslt:normalize_string($_XDOCTX, (../../../../P_CONTACT_NAME)[1]))"/>
      <xsl:variable name="v648" select="xdoxslt:convert_case(string(xdoxslt:one($v647)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v648))) > 23">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v649', substring(string(xdoxslt:one($v648)), 1, 23))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v649', $v648)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P23S197', xdoxslt:get_variable($_XDOCTX, '$v649'))"/>
   </xsl:template>
   <xsl:template name="L5R13P1S198">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v650" select="string('*')"/>
      <xsl:variable name="v651" select="xdoxslt:convert_case(string(xdoxslt:one($v650)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v651))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v652', substring(string(xdoxslt:one($v651)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v652', $v651)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P1S198', xdoxslt:get_variable($_XDOCTX, '$v652'))"/>
   </xsl:template>
   <xsl:template name="L5R13P2S199">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('EM')),'NONE')-->
      <xsl:variable name="v653" select="string('EM')"/>
      <xsl:variable name="v654" select="xdoxslt:convert_case(string(xdoxslt:one($v653)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v654))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v655', substring(string(xdoxslt:one($v654)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v655', $v654)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P2S199', xdoxslt:get_variable($_XDOCTX, '$v655'))"/>
   </xsl:template>
   <xsl:template name="L5R13P1S200">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v656" select="string('*')"/>
      <xsl:variable name="v657" select="xdoxslt:convert_case(string(xdoxslt:one($v656)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v657))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v658', substring(string(xdoxslt:one($v657)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v658', $v657)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P1S200', xdoxslt:get_variable($_XDOCTX, '$v658'))"/>
   </xsl:template>
   <xsl:template name="L5R13P80S201">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((../../../../P_CONTACT_EMAIL)),'NONE')-->
      <xsl:variable name="v659" select="string(xdoxslt:normalize_string($_XDOCTX, (../../../../P_CONTACT_EMAIL)[1]))"/>
      <xsl:variable name="v660" select="xdoxslt:convert_case(string(xdoxslt:one($v659)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v660))) > 80">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v661', substring(string(xdoxslt:one($v660)), 1, 80))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v661', $v660)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P80S201', xdoxslt:get_variable($_XDOCTX, '$v661'))"/>
   </xsl:template>
   <xsl:template name="L5R13P1S202">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v662" select="string('*')"/>
      <xsl:variable name="v663" select="xdoxslt:convert_case(string(xdoxslt:one($v662)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v663))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v664', substring(string(xdoxslt:one($v663)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v664', $v663)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P1S202', xdoxslt:get_variable($_XDOCTX, '$v664'))"/>
   </xsl:template>
   <xsl:template name="L5R13P2S203">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((Comm_Unit_Qualifier)),'NONE')-->
      <xsl:variable name="v665" select="string(xdoxslt:normalize_string($_XDOCTX, (.//Comm_Unit_Qualifier)[1]))"/>
      <xsl:variable name="v666" select="xdoxslt:convert_case(string(xdoxslt:one($v665)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v666))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v667', substring(string(xdoxslt:one($v666)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v667', $v666)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P2S203', xdoxslt:get_variable($_XDOCTX, '$v667'))"/>
   </xsl:template>
   <xsl:template name="L5R13P1S204">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v668" select="string('*')"/>
      <xsl:variable name="v669" select="xdoxslt:convert_case(string(xdoxslt:one($v668)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v669))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v670', substring(string(xdoxslt:one($v669)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v670', $v669)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P1S204', xdoxslt:get_variable($_XDOCTX, '$v670'))"/>
   </xsl:template>
   <xsl:template name="L5R13P80S205">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((Comm_Unit_Number)),'NONE')-->
      <xsl:variable name="v671" select="string(xdoxslt:normalize_string($_XDOCTX, (.//Comm_Unit_Number)[1]))"/>
      <xsl:variable name="v672" select="xdoxslt:convert_case(string(xdoxslt:one($v671)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v672))) > 80">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v673', substring(string(xdoxslt:one($v672)), 1, 80))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v673', $v672)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P80S205', xdoxslt:get_variable($_XDOCTX, '$v673'))"/>
   </xsl:template>
   <xsl:template name="L5R13P1S206">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v674" select="string('*')"/>
      <xsl:variable name="v675" select="xdoxslt:convert_case(string(xdoxslt:one($v674)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v675))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v676', substring(string(xdoxslt:one($v675)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v676', $v675)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P1S206', xdoxslt:get_variable($_XDOCTX, '$v676'))"/>
   </xsl:template>
   <xsl:template name="L5R13P1S207">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v677" select="string('*')"/>
      <xsl:variable name="v678" select="xdoxslt:convert_case(string(xdoxslt:one($v677)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v678))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v679', substring(string(xdoxslt:one($v678)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v679', $v678)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P1S207', xdoxslt:get_variable($_XDOCTX, '$v679'))"/>
   </xsl:template>
   <xsl:template name="L5R13P1S208">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v680" select="string('*')"/>
      <xsl:variable name="v681" select="xdoxslt:convert_case(string(xdoxslt:one($v680)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v681))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v682', substring(string(xdoxslt:one($v681)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v682', $v681)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P1S208', xdoxslt:get_variable($_XDOCTX, '$v682'))"/>
   </xsl:template>
   <xsl:template name="L5R13P1S209">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v683" select="string('*')"/>
      <xsl:variable name="v684" select="xdoxslt:convert_case(string(xdoxslt:one($v683)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v684))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v685', substring(string(xdoxslt:one($v684)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v685', $v684)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R13P1S209', xdoxslt:get_variable($_XDOCTX, '$v685'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_M12_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_M12_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="COND_v686">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression:  LIST_GTM_TRANS_REFNUM/GTM_TRANS_REFNUM[GTM_TRANS_REFNUM_QUAL_GID='SCOULAR.BL_TYPE']/REFNUM_VALUE In('37','38') AND LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID NOT IN('SCOULAR/NVO.AMS_CANCEL')-->
      <xsl:variable name="v687" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANS_REFNUM/GTM_TRANS_REFNUM[(GTM_TRANS_REFNUM_QUAL_GID)[1] = 'SCOULAR.BL_TYPE']/REFNUM_VALUE)[1]) = '37' or xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANS_REFNUM/GTM_TRANS_REFNUM[(GTM_TRANS_REFNUM_QUAL_GID)[1] = 'SCOULAR.BL_TYPE']/REFNUM_VALUE)[1]) = '38'"/>
      <xsl:variable name="v688" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_CANCEL'"/>
      <xsl:variable name="v689" select="not(xdoxslt:one($v688))"/>
      <xsl:variable name="v690" select="xdoxslt:one($v687) and xdoxslt:one($v689)"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COND_v686_V', $v690)"/>
   </xsl:template>
   <xsl:template name="L3R14P3S210">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('M12')),'NONE')-->
      <xsl:variable name="v691" select="string('M12')"/>
      <xsl:variable name="v692" select="xdoxslt:convert_case(string(xdoxslt:one($v691)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v692))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v693', substring(string(xdoxslt:one($v692)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v693', $v692)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P3S210', xdoxslt:get_variable($_XDOCTX, '$v693'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S211">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v694" select="string('*')"/>
      <xsl:variable name="v695" select="xdoxslt:convert_case(string(xdoxslt:one($v694)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v695))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v696', substring(string(xdoxslt:one($v695)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v696', $v695)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S211', xdoxslt:get_variable($_XDOCTX, '$v696'))"/>
   </xsl:template>
   <xsl:template name="L3R14P2S212">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((Entry_Type_Code)),'NONE')-->
      <xsl:variable name="v697" select="string(xdoxslt:normalize_string($_XDOCTX, (.//Entry_Type_Code)[1]))"/>
      <xsl:variable name="v698" select="xdoxslt:convert_case(string(xdoxslt:one($v697)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v698))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v699', substring(string(xdoxslt:one($v698)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v699', $v698)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P2S212', xdoxslt:get_variable($_XDOCTX, '$v699'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S213">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v700" select="string('*')"/>
      <xsl:variable name="v701" select="xdoxslt:convert_case(string(xdoxslt:one($v700)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v701))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v702', substring(string(xdoxslt:one($v701)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v702', $v701)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S213', xdoxslt:get_variable($_XDOCTX, '$v702'))"/>
   </xsl:template>
   <xsl:template name="L3R14P14S214">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((Entry_Number)),'NONE')-->
      <xsl:variable name="v703" select="string(xdoxslt:normalize_string($_XDOCTX, (.//Entry_Number)[1]))"/>
      <xsl:variable name="v704" select="xdoxslt:convert_case(string(xdoxslt:one($v703)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v704))) > 14">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v705', substring(string(xdoxslt:one($v704)), 1, 14))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v705', $v704)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P14S214', xdoxslt:get_variable($_XDOCTX, '$v705'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S215">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v706" select="string('*')"/>
      <xsl:variable name="v707" select="xdoxslt:convert_case(string(xdoxslt:one($v706)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v707))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v708', substring(string(xdoxslt:one($v707)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v708', $v707)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S215', xdoxslt:get_variable($_XDOCTX, '$v708'))"/>
   </xsl:template>
   <xsl:template name="L3R14P30S216">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((Location_ID)),'NONE')-->
      <xsl:variable name="v709" select="string(xdoxslt:normalize_string($_XDOCTX, (.//Location_ID)[1]))"/>
      <xsl:variable name="v710" select="xdoxslt:convert_case(string(xdoxslt:one($v709)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v710))) > 30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v711', substring(string(xdoxslt:one($v710)), 1, 30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v711', $v710)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P30S216', xdoxslt:get_variable($_XDOCTX, '$v711'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S217">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v712" select="string('*')"/>
      <xsl:variable name="v713" select="xdoxslt:convert_case(string(xdoxslt:one($v712)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v713))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v714', substring(string(xdoxslt:one($v713)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v714', $v713)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S217', xdoxslt:get_variable($_XDOCTX, '$v714'))"/>
   </xsl:template>
   <xsl:template name="L3R14P30S218">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((Location_Id)),'NONE')-->
      <xsl:variable name="v715" select="string(xdoxslt:normalize_string($_XDOCTX, (.//Location_Id)[1]))"/>
      <xsl:variable name="v716" select="xdoxslt:convert_case(string(xdoxslt:one($v715)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v716))) > 30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v717', substring(string(xdoxslt:one($v716)), 1, 30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v717', $v716)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P30S218', xdoxslt:get_variable($_XDOCTX, '$v717'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S219">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v718" select="string('*')"/>
      <xsl:variable name="v719" select="xdoxslt:convert_case(string(xdoxslt:one($v718)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v719))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v720', substring(string(xdoxslt:one($v719)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v720', $v719)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S219', xdoxslt:get_variable($_XDOCTX, '$v720'))"/>
   </xsl:template>
   <xsl:template name="L3R14P8S220">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((Shipment_Value))-->
      <xsl:variable name="v721" select="xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, (.//Shipment_Value)[1]))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v721))) > 8">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v722', substring(string(xdoxslt:one($v721)), 1, 8))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v722', $v721)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P8S220', xdoxslt:get_variable($_XDOCTX, '$v722'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S221">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v723" select="string('*')"/>
      <xsl:variable name="v724" select="xdoxslt:convert_case(string(xdoxslt:one($v723)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v724))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v725', substring(string(xdoxslt:one($v724)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v725', $v724)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S221', xdoxslt:get_variable($_XDOCTX, '$v725'))"/>
   </xsl:template>
   <xsl:template name="L3R14P9S222">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((In_Bond_No)),'NONE')-->
      <xsl:variable name="v726" select="string(xdoxslt:normalize_string($_XDOCTX, (.//In_Bond_No)[1]))"/>
      <xsl:variable name="v727" select="xdoxslt:convert_case(string(xdoxslt:one($v726)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v727))) > 9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v728', substring(string(xdoxslt:one($v727)), 1, 9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v728', $v727)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P9S222', xdoxslt:get_variable($_XDOCTX, '$v728'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S223">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v729" select="string('*')"/>
      <xsl:variable name="v730" select="xdoxslt:convert_case(string(xdoxslt:one($v729)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v730))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v731', substring(string(xdoxslt:one($v730)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v731', $v730)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S223', xdoxslt:get_variable($_XDOCTX, '$v731'))"/>
   </xsl:template>
   <xsl:template name="L3R14P4S224">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SCAC)),'NONE')-->
      <xsl:variable name="v732" select="string(xdoxslt:normalize_string($_XDOCTX, (.//SCAC)[1]))"/>
      <xsl:variable name="v733" select="xdoxslt:convert_case(string(xdoxslt:one($v732)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v733))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v734', substring(string(xdoxslt:one($v733)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v734', $v733)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P4S224', xdoxslt:get_variable($_XDOCTX, '$v734'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S225">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v735" select="string('*')"/>
      <xsl:variable name="v736" select="xdoxslt:convert_case(string(xdoxslt:one($v735)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v736))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v737', substring(string(xdoxslt:one($v736)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v737', $v736)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S225', xdoxslt:get_variable($_XDOCTX, '$v737'))"/>
   </xsl:template>
   <xsl:template name="L3R14P2S226">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('BI')),'NONE')-->
      <xsl:variable name="v738" select="string('BI')"/>
      <xsl:variable name="v739" select="xdoxslt:convert_case(string(xdoxslt:one($v738)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v739))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v740', substring(string(xdoxslt:one($v739)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v740', $v739)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P2S226', xdoxslt:get_variable($_XDOCTX, '$v740'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S227">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v741" select="string('*')"/>
      <xsl:variable name="v742" select="xdoxslt:convert_case(string(xdoxslt:one($v741)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v742))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v743', substring(string(xdoxslt:one($v742)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v743', $v742)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S227', xdoxslt:get_variable($_XDOCTX, '$v743'))"/>
   </xsl:template>
   <xsl:template name="L3R14P12S228">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((Reference_ID)),'NONE')-->
      <xsl:variable name="v744" select="string(xdoxslt:normalize_string($_XDOCTX, (.//Reference_ID)[1]))"/>
      <xsl:variable name="v745" select="xdoxslt:convert_case(string(xdoxslt:one($v744)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v745))) > 12">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v746', substring(string(xdoxslt:one($v745)), 1, 12))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v746', $v745)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P12S228', xdoxslt:get_variable($_XDOCTX, '$v746'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S229">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v747" select="string('*')"/>
      <xsl:variable name="v748" select="xdoxslt:convert_case(string(xdoxslt:one($v747)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v748))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v749', substring(string(xdoxslt:one($v748)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v749', $v748)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S229', xdoxslt:get_variable($_XDOCTX, '$v749'))"/>
   </xsl:template>
   <xsl:template name="L3R14P2S230">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((Trans_Method)),'NONE')-->
      <xsl:variable name="v750" select="string(xdoxslt:normalize_string($_XDOCTX, (.//Trans_Method)[1]))"/>
      <xsl:variable name="v751" select="xdoxslt:convert_case(string(xdoxslt:one($v750)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v751))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v752', substring(string(xdoxslt:one($v751)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v752', $v751)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P2S230', xdoxslt:get_variable($_XDOCTX, '$v752'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S231">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v753" select="string('*')"/>
      <xsl:variable name="v754" select="xdoxslt:convert_case(string(xdoxslt:one($v753)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v754))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v755', substring(string(xdoxslt:one($v754)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v755', $v754)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S231', xdoxslt:get_variable($_XDOCTX, '$v755'))"/>
   </xsl:template>
   <xsl:template name="L3R14P28S232">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((Vessel_Name)),'NONE')-->
      <xsl:variable name="v756" select="string(xdoxslt:normalize_string($_XDOCTX, (.//Vessel_Name)[1]))"/>
      <xsl:variable name="v757" select="xdoxslt:convert_case(string(xdoxslt:one($v756)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v757))) > 28">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v758', substring(string(xdoxslt:one($v757)), 1, 28))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v758', $v757)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P28S232', xdoxslt:get_variable($_XDOCTX, '$v758'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S233">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v759" select="string('*')"/>
      <xsl:variable name="v760" select="xdoxslt:convert_case(string(xdoxslt:one($v759)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v760))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v761', substring(string(xdoxslt:one($v760)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v761', $v760)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S233', xdoxslt:get_variable($_XDOCTX, '$v761'))"/>
   </xsl:template>
   <xsl:template name="L3R14P1S234">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((Yes_No)),'NONE')-->
      <xsl:variable name="v762" select="string(xdoxslt:normalize_string($_XDOCTX, (.//Yes_No)[1]))"/>
      <xsl:variable name="v763" select="xdoxslt:convert_case(string(xdoxslt:one($v762)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v763))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v764', substring(string(xdoxslt:one($v763)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v764', $v763)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L3R14P1S234', xdoxslt:get_variable($_XDOCTX, '$v764'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_VID_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_VID_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="COND_v765">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression:  EQUIP_ID IS NOT NULL AND LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID NOT IN('SCOULAR/NVO.AMS_CANCEL')-->
      <xsl:variable name="v766" select="xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_ID)[1]) != ''"/>
      <xsl:variable name="v767" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_CANCEL'"/>
      <xsl:variable name="v768" select="not(xdoxslt:one($v767))"/>
      <xsl:variable name="v769" select="xdoxslt:one($v766) and xdoxslt:one($v768)"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COND_v765_V', $v769)"/>
   </xsl:template>
   <xsl:template name="L5R15P3S235">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('VID')),'NONE')-->
      <xsl:variable name="v770" select="string('VID')"/>
      <xsl:variable name="v771" select="xdoxslt:convert_case(string(xdoxslt:one($v770)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v771))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v772', substring(string(xdoxslt:one($v771)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v772', $v771)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P3S235', xdoxslt:get_variable($_XDOCTX, '$v772'))"/>
   </xsl:template>
   <xsl:template name="L5R15P1S236">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v773" select="string('*')"/>
      <xsl:variable name="v774" select="xdoxslt:convert_case(string(xdoxslt:one($v773)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v774))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v775', substring(string(xdoxslt:one($v774)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v775', $v774)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P1S236', xdoxslt:get_variable($_XDOCTX, '$v775'))"/>
   </xsl:template>
   <xsl:template name="L5R15P2S237">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((DECODE(EQUIP_LEN,20,'AC',21,'AT',40,'AC',41,'AT',42,'AC',45,'AC',46,'AT','AC'))),'NONE')-->
      <xsl:variable name="v776t0" select="substring(string('AC'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) = '20') * string-length(string('AC')))"/>
      <xsl:variable name="v776t1" select="substring(string('AT'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) = '21') * string-length(string('AT')))"/>
      <xsl:variable name="v776t2" select="substring(string('AC'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) = '40') * string-length(string('AC')))"/>
      <xsl:variable name="v776t3" select="substring(string('AT'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) = '41') * string-length(string('AT')))"/>
      <xsl:variable name="v776t4" select="substring(string('AC'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) = '42') * string-length(string('AC')))"/>
      <xsl:variable name="v776t5" select="substring(string('AC'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) = '45') * string-length(string('AC')))"/>
      <xsl:variable name="v776t6" select="substring(string('AT'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) = '46') * string-length(string('AT')))"/>
      <xsl:variable name="v776t7" select="substring(string('AC'), 1, string-length(string('AC')) * number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) != '20') * number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) != '21') * number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) != '40') * number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) != '41') * number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) != '42') * number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) != '45') * number(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_LEN)[1])) != '46'))"/>
      <xsl:variable name="v776" select="concat($v776t0, $v776t1, $v776t2, $v776t3, $v776t4, $v776t5, $v776t6, $v776t7)"/>
      <xsl:variable name="v777" select="string(xdoxslt:one($v776))"/>
      <xsl:variable name="v778" select="xdoxslt:convert_case(string(xdoxslt:one($v777)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v778))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v779', substring(string(xdoxslt:one($v778)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v779', $v778)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P2S237', xdoxslt:get_variable($_XDOCTX, '$v779'))"/>
   </xsl:template>
   <xsl:template name="L5R15P1S238">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v780" select="string('*')"/>
      <xsl:variable name="v781" select="xdoxslt:convert_case(string(xdoxslt:one($v780)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v781))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v782', substring(string(xdoxslt:one($v781)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v782', $v781)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P1S238', xdoxslt:get_variable($_XDOCTX, '$v782'))"/>
   </xsl:template>
   <xsl:template name="L5R15P4S239">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SUBSTR(EQUIP_ID,1,4))),'NONE')-->
      <xsl:variable name="v783" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_ID)[1])), number(1), number(4))"/>
      <xsl:variable name="v784" select="string(xdoxslt:one($v783))"/>
      <xsl:variable name="v785" select="xdoxslt:convert_case(string(xdoxslt:one($v784)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v785))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v786', substring(string(xdoxslt:one($v785)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v786', $v785)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P4S239', xdoxslt:get_variable($_XDOCTX, '$v786'))"/>
   </xsl:template>
   <xsl:template name="L5R15P1S240">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v787" select="string('*')"/>
      <xsl:variable name="v788" select="xdoxslt:convert_case(string(xdoxslt:one($v787)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v788))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v789', substring(string(xdoxslt:one($v788)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v789', $v788)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P1S240', xdoxslt:get_variable($_XDOCTX, '$v789'))"/>
   </xsl:template>
   <xsl:template name="L5R15P10S241">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SUBSTR(EQUIP_ID,5))),'NONE')-->
      <xsl:variable name="v790" select="substring(string(xdoxslt:normalize_string($_XDOCTX, (.//EQUIP_ID)[1])), number(5))"/>
      <xsl:variable name="v791" select="string(xdoxslt:one($v790))"/>
      <xsl:variable name="v792" select="xdoxslt:convert_case(string(xdoxslt:one($v791)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v792))) > 10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v793', substring(string(xdoxslt:one($v792)), 1, 10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v793', $v792)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P10S241', xdoxslt:get_variable($_XDOCTX, '$v793'))"/>
   </xsl:template>
   <xsl:template name="L5R15P1S242">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v794" select="string('*')"/>
      <xsl:variable name="v795" select="xdoxslt:convert_case(string(xdoxslt:one($v794)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v795))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v796', substring(string(xdoxslt:one($v795)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v796', $v795)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P1S242', xdoxslt:get_variable($_XDOCTX, '$v796'))"/>
   </xsl:template>
   <xsl:template name="L5R15P15S243">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SEAL1)),'NONE')-->
      <xsl:variable name="v797" select="string(xdoxslt:normalize_string($_XDOCTX, (.//SEAL1)[1]))"/>
      <xsl:variable name="v798" select="xdoxslt:convert_case(string(xdoxslt:one($v797)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v798))) > 15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v799', substring(string(xdoxslt:one($v798)), 1, 15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v799', $v798)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P15S243', xdoxslt:get_variable($_XDOCTX, '$v799'))"/>
   </xsl:template>
   <xsl:template name="L5R15P1S244">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v800" select="string('*')"/>
      <xsl:variable name="v801" select="xdoxslt:convert_case(string(xdoxslt:one($v800)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v801))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v802', substring(string(xdoxslt:one($v801)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v802', $v801)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P1S244', xdoxslt:get_variable($_XDOCTX, '$v802'))"/>
   </xsl:template>
   <xsl:template name="L5R15P15S245">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SEAL2)),'NONE')-->
      <xsl:variable name="v803" select="string(xdoxslt:normalize_string($_XDOCTX, (.//SEAL2)[1]))"/>
      <xsl:variable name="v804" select="xdoxslt:convert_case(string(xdoxslt:one($v803)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v804))) > 15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v805', substring(string(xdoxslt:one($v804)), 1, 15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v805', $v804)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P15S245', xdoxslt:get_variable($_XDOCTX, '$v805'))"/>
   </xsl:template>
   <xsl:template name="L5R15P1S246">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v806" select="string('*')"/>
      <xsl:variable name="v807" select="xdoxslt:convert_case(string(xdoxslt:one($v806)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v807))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v808', substring(string(xdoxslt:one($v807)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v808', $v807)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P1S246', xdoxslt:get_variable($_XDOCTX, '$v808'))"/>
   </xsl:template>
   <xsl:template name="L5R15P4S247">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v809" select="string('*')"/>
      <xsl:variable name="v810" select="xdoxslt:convert_case(string(xdoxslt:one($v809)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v810))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v811', substring(string(xdoxslt:one($v810)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v811', $v810)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P4S247', xdoxslt:get_variable($_XDOCTX, '$v811'))"/>
   </xsl:template>
   <xsl:template name="L5R15P1S248">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v812" select="string('*')"/>
      <xsl:variable name="v813" select="xdoxslt:convert_case(string(xdoxslt:one($v812)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v813))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v814', substring(string(xdoxslt:one($v813)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v814', $v813)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P1S248', xdoxslt:get_variable($_XDOCTX, '$v814'))"/>
   </xsl:template>
   <xsl:template name="L5R15P1S249">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v815" select="string('*')"/>
      <xsl:variable name="v816" select="xdoxslt:convert_case(string(xdoxslt:one($v815)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v816))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v817', substring(string(xdoxslt:one($v816)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v817', $v816)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P1S249', xdoxslt:get_variable($_XDOCTX, '$v817'))"/>
   </xsl:template>
   <xsl:template name="L5R15P1S250">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v818" select="string('*')"/>
      <xsl:variable name="v819" select="xdoxslt:convert_case(string(xdoxslt:one($v818)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v819))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v820', substring(string(xdoxslt:one($v819)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v820', $v819)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P1S250', xdoxslt:get_variable($_XDOCTX, '$v820'))"/>
   </xsl:template>
   <xsl:template name="L5R15P1S251">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v821" select="string('*')"/>
      <xsl:variable name="v822" select="xdoxslt:convert_case(string(xdoxslt:one($v821)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v822))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v823', substring(string(xdoxslt:one($v822)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v823', $v822)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P1S251', xdoxslt:get_variable($_XDOCTX, '$v823'))"/>
   </xsl:template>
   <xsl:template name="L5R15P1S252">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v824" select="string('*')"/>
      <xsl:variable name="v825" select="xdoxslt:convert_case(string(xdoxslt:one($v824)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v825))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v826', substring(string(xdoxslt:one($v825)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v826', $v825)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P1S252', xdoxslt:get_variable($_XDOCTX, '$v826'))"/>
   </xsl:template>
   <xsl:template name="L5R15P4S253">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((Equipment_Type)),'NONE')-->
      <xsl:variable name="v827" select="string(xdoxslt:normalize_string($_XDOCTX, (.//Equipment_Type)[1]))"/>
      <xsl:variable name="v828" select="xdoxslt:convert_case(string(xdoxslt:one($v827)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v828))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v829', substring(string(xdoxslt:one($v828)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v829', $v828)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P4S253', xdoxslt:get_variable($_XDOCTX, '$v829'))"/>
   </xsl:template>
   <xsl:template name="L5R15P15S254">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('L')),'NONE')-->
      <xsl:variable name="v830" select="string('L')"/>
      <xsl:variable name="v831" select="xdoxslt:convert_case(string(xdoxslt:one($v830)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v831))) > 15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v832', substring(string(xdoxslt:one($v831)), 1, 15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v832', $v831)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P15S254', xdoxslt:get_variable($_XDOCTX, '$v832'))"/>
   </xsl:template>
   <xsl:template name="L5R15P2S255">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_OTM_JOB/GTM_OTM_JOB/ATTRIBUTE9)),'NONE')-->
      <xsl:variable name="v833" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_OTM_JOB/GTM_OTM_JOB/ATTRIBUTE9)[1]))"/>
      <xsl:variable name="v834" select="xdoxslt:convert_case(string(xdoxslt:one($v833)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v834))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v835', substring(string(xdoxslt:one($v834)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v835', $v834)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R15P2S255', xdoxslt:get_variable($_XDOCTX, '$v835'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_N10_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_N10_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="COND_v836">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: WEIGHT >0 OR LINE_QTY>0 AND LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID NOT IN('SCOULAR/NVO.AMS_CANCEL')-->
      <xsl:variable name="v837" select="xdoxslt:nOne(xdoxslt:normalize_string($_XDOCTX, (.//WEIGHT)[1])) > 0"/>
      <xsl:variable name="v838" select="xdoxslt:nOne(xdoxslt:normalize_string($_XDOCTX, (.//LINE_QTY)[1])) > 0"/>
      <xsl:variable name="v839" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_CANCEL'"/>
      <xsl:variable name="v840" select="not(xdoxslt:one($v839))"/>
      <xsl:variable name="v841" select="xdoxslt:one($v838) and xdoxslt:one($v840)"/>
      <xsl:variable name="v842" select="xdoxslt:one($v837) or xdoxslt:one($v841)"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COND_v836_V', $v842)"/>
   </xsl:template>
   <xsl:template name="L5R16P-1S256">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('N10')),'NONE')-->
      <xsl:variable name="v843" select="string('N10')"/>
      <xsl:variable name="v844" select="xdoxslt:convert_case(string(xdoxslt:one($v843)), string('NONE'))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P-1S256', $v844)"/>
   </xsl:template>
   <xsl:template name="L5R16P1S257">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v845" select="string('*')"/>
      <xsl:variable name="v846" select="xdoxslt:convert_case(string(xdoxslt:one($v845)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v846))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v847', substring(string(xdoxslt:one($v846)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v847', $v846)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S257', xdoxslt:get_variable($_XDOCTX, '$v847'))"/>
   </xsl:template>
   <xsl:template name="L5R16P10S258">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((LINE_QTY))-->
      <xsl:variable name="v848" select="xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, (.//LINE_QTY)[1]))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v848))) > 10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v849', substring(string(xdoxslt:one($v848)), 1, 10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v849', $v848)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P10S258', xdoxslt:get_variable($_XDOCTX, '$v849'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S259">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v850" select="string('*')"/>
      <xsl:variable name="v851" select="xdoxslt:convert_case(string(xdoxslt:one($v850)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v851))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v852', substring(string(xdoxslt:one($v851)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v852', $v851)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S259', xdoxslt:get_variable($_XDOCTX, '$v852'))"/>
   </xsl:template>
   <xsl:template name="L5R16P45S260">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((FF_DESC)),'NONE')-->
      <xsl:variable name="v853" select="string(xdoxslt:normalize_string($_XDOCTX, (.//FF_DESC)[1]))"/>
      <xsl:variable name="v854" select="xdoxslt:convert_case(string(xdoxslt:one($v853)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v854))) > 45">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v855', substring(string(xdoxslt:one($v854)), 1, 45))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v855', $v854)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P45S260', xdoxslt:get_variable($_XDOCTX, '$v855'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S261">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v856" select="string('*')"/>
      <xsl:variable name="v857" select="xdoxslt:convert_case(string(xdoxslt:one($v856)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v857))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v858', substring(string(xdoxslt:one($v857)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v858', $v857)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S261', xdoxslt:get_variable($_XDOCTX, '$v858'))"/>
   </xsl:template>
   <xsl:template name="L5R16P48S262">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF MARKS_NUM IS NOT NULL THEN MARKS_NUM
ELSE
'NO MARKS'
END IF)),'NONE')-->
      <xsl:variable name="v859" select="xdoxslt:normalize_string($_XDOCTX, (.//MARKS_NUM)[1]) != ''"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v860t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v859)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v860t', xdoxslt:normalize_string($_XDOCTX, (.//MARKS_NUM)[1]))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v860t', 'NO MARKS')"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:variable name="v860" select="xdoxslt:get_variable($_XDOCTX, 'v860t')"/>
      <xsl:variable name="v861" select="string(xdoxslt:one($v860))"/>
      <xsl:variable name="v862" select="xdoxslt:convert_case(string(xdoxslt:one($v861)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v862))) > 48">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v863', substring(string(xdoxslt:one($v862)), 1, 48))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v863', $v862)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P48S262', xdoxslt:get_variable($_XDOCTX, '$v863'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S263">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v864" select="string('*')"/>
      <xsl:variable name="v865" select="xdoxslt:convert_case(string(xdoxslt:one($v864)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v865))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v866', substring(string(xdoxslt:one($v865)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v866', $v865)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S263', xdoxslt:get_variable($_XDOCTX, '$v866'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S264">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF CLASS_CODE IS NOT NULL THEN
'J'
END IF)),'NONE')-->
      <xsl:variable name="v867" select="xdoxslt:normalize_string($_XDOCTX, (.//CLASS_CODE)[1]) != ''"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v868t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v867)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v868t', 'J')"/>
         </xsl:when>
      </xsl:choose>
      <xsl:variable name="v868" select="xdoxslt:get_variable($_XDOCTX, 'v868t')"/>
      <xsl:variable name="v869" select="string(xdoxslt:one($v868))"/>
      <xsl:variable name="v870" select="xdoxslt:convert_case(string(xdoxslt:one($v869)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v870))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v871', substring(string(xdoxslt:one($v870)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v871', $v870)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S264', xdoxslt:get_variable($_XDOCTX, '$v871'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S265">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v872" select="string('*')"/>
      <xsl:variable name="v873" select="xdoxslt:convert_case(string(xdoxslt:one($v872)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v873))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v874', substring(string(xdoxslt:one($v873)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v874', $v873)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S265', xdoxslt:get_variable($_XDOCTX, '$v874'))"/>
   </xsl:template>
   <xsl:template name="L5R16P30S266">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF CLASS_CODE IS NOT NULL 
THEN
CLASS_CODE
END IF)),'NONE')-->
      <xsl:variable name="v875" select="xdoxslt:normalize_string($_XDOCTX, (.//CLASS_CODE)[1]) != ''"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v876t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v875)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v876t', xdoxslt:normalize_string($_XDOCTX, (.//CLASS_CODE)[1]))"/>
         </xsl:when>
      </xsl:choose>
      <xsl:variable name="v876" select="xdoxslt:get_variable($_XDOCTX, 'v876t')"/>
      <xsl:variable name="v877" select="string(xdoxslt:one($v876))"/>
      <xsl:variable name="v878" select="xdoxslt:convert_case(string(xdoxslt:one($v877)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v878))) > 30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v879', substring(string(xdoxslt:one($v878)), 1, 30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v879', $v878)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P30S266', xdoxslt:get_variable($_XDOCTX, '$v879'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S267">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v880" select="string('*')"/>
      <xsl:variable name="v881" select="xdoxslt:convert_case(string(xdoxslt:one($v880)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v881))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v882', substring(string(xdoxslt:one($v881)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v882', $v881)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S267', xdoxslt:get_variable($_XDOCTX, '$v882'))"/>
   </xsl:template>
   <xsl:template name="L5R16P8S268">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF LINE_VALUE > 0
THEN 
LINE_VALUE
END IF)),'NONE')-->
      <xsl:variable name="v883" select="xdoxslt:nOne(xdoxslt:normalize_string($_XDOCTX, (.//LINE_VALUE)[1])) > 0"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v884t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v883)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v884t', xdoxslt:normalize_string($_XDOCTX, (.//LINE_VALUE)[1]))"/>
         </xsl:when>
      </xsl:choose>
      <xsl:variable name="v884" select="xdoxslt:get_variable($_XDOCTX, 'v884t')"/>
      <xsl:variable name="v885" select="string(xdoxslt:one($v884))"/>
      <xsl:variable name="v886" select="xdoxslt:convert_case(string(xdoxslt:one($v885)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v886))) > 8">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v887', substring(string(xdoxslt:one($v886)), 1, 8))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v887', $v886)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P8S268', xdoxslt:get_variable($_XDOCTX, '$v887'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S269">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v888" select="string('*')"/>
      <xsl:variable name="v889" select="xdoxslt:convert_case(string(xdoxslt:one($v888)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v889))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v890', substring(string(xdoxslt:one($v889)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v890', $v889)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S269', xdoxslt:get_variable($_XDOCTX, '$v890'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S270">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((DECODE(WEIGHT_UNIT_CODE,'KG','K','MTON','E','LB','L','LBS','L',''))),'NONE')-->
      <xsl:variable name="v891t0" select="substring(string('K'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//WEIGHT_UNIT_CODE)[1])) = 'KG') * string-length(string('K')))"/>
      <xsl:variable name="v891t1" select="substring(string('E'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//WEIGHT_UNIT_CODE)[1])) = 'MTON') * string-length(string('E')))"/>
      <xsl:variable name="v891t2" select="substring(string('L'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//WEIGHT_UNIT_CODE)[1])) = 'LB') * string-length(string('L')))"/>
      <xsl:variable name="v891t3" select="substring(string('L'), 1, number(string(xdoxslt:normalize_string($_XDOCTX, (.//WEIGHT_UNIT_CODE)[1])) = 'LBS') * string-length(string('L')))"/>
      <xsl:variable name="v891t4" select="substring(string(''), 1, string-length(string('')) * number(string(xdoxslt:normalize_string($_XDOCTX, (.//WEIGHT_UNIT_CODE)[1])) != 'KG') * number(string(xdoxslt:normalize_string($_XDOCTX, (.//WEIGHT_UNIT_CODE)[1])) != 'MTON') * number(string(xdoxslt:normalize_string($_XDOCTX, (.//WEIGHT_UNIT_CODE)[1])) != 'LB') * number(string(xdoxslt:normalize_string($_XDOCTX, (.//WEIGHT_UNIT_CODE)[1])) != 'LBS'))"/>
      <xsl:variable name="v891" select="concat($v891t0, $v891t1, $v891t2, $v891t3, $v891t4)"/>
      <xsl:variable name="v892" select="string(xdoxslt:one($v891))"/>
      <xsl:variable name="v893" select="xdoxslt:convert_case(string(xdoxslt:one($v892)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v893))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v894', substring(string(xdoxslt:one($v893)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v894', $v893)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S270', xdoxslt:get_variable($_XDOCTX, '$v894'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S271">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v895" select="string('*')"/>
      <xsl:variable name="v896" select="xdoxslt:convert_case(string(xdoxslt:one($v895)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v896))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v897', substring(string(xdoxslt:one($v896)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v897', $v896)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S271', xdoxslt:get_variable($_XDOCTX, '$v897'))"/>
   </xsl:template>
   <xsl:template name="L5R16P10S272">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((IF WEIGHT > 0 THEN WEIGHT
END IF)),'NONE')-->
      <xsl:variable name="v898" select="xdoxslt:nOne(xdoxslt:normalize_string($_XDOCTX, (.//WEIGHT)[1])) > 0"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v899t', string(''))"/>
      <xsl:choose>
         <xsl:when test="xdoxslt:one($v898)">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'v899t', xdoxslt:normalize_string($_XDOCTX, (.//WEIGHT)[1]))"/>
         </xsl:when>
      </xsl:choose>
      <xsl:variable name="v899" select="xdoxslt:get_variable($_XDOCTX, 'v899t')"/>
      <xsl:variable name="v900" select="string(xdoxslt:one($v899))"/>
      <xsl:variable name="v901" select="xdoxslt:convert_case(string(xdoxslt:one($v900)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v901))) > 10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v902', substring(string(xdoxslt:one($v901)), 1, 10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v902', $v901)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P10S272', xdoxslt:get_variable($_XDOCTX, '$v902'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S273">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v903" select="string('*')"/>
      <xsl:variable name="v904" select="xdoxslt:convert_case(string(xdoxslt:one($v903)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v904))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v905', substring(string(xdoxslt:one($v904)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v905', $v904)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S273', xdoxslt:get_variable($_XDOCTX, '$v905'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S274">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v906" select="string('*')"/>
      <xsl:variable name="v907" select="xdoxslt:convert_case(string(xdoxslt:one($v906)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v907))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v908', substring(string(xdoxslt:one($v907)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v908', $v907)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S274', xdoxslt:get_variable($_XDOCTX, '$v908'))"/>
   </xsl:template>
   <xsl:template name="L5R16P3S275">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((UNIT_CODE)),'NONE')-->
      <xsl:variable name="v909" select="string(xdoxslt:normalize_string($_XDOCTX, (.//UNIT_CODE)[1]))"/>
      <xsl:variable name="v910" select="xdoxslt:convert_case(string(xdoxslt:one($v909)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v910))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v911', substring(string(xdoxslt:one($v910)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v911', $v910)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P3S275', xdoxslt:get_variable($_XDOCTX, '$v911'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S276">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v912" select="string('*')"/>
      <xsl:variable name="v913" select="xdoxslt:convert_case(string(xdoxslt:one($v912)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v913))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v914', substring(string(xdoxslt:one($v913)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v914', $v913)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S276', xdoxslt:get_variable($_XDOCTX, '$v914'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S277">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v915" select="string('*')"/>
      <xsl:variable name="v916" select="xdoxslt:convert_case(string(xdoxslt:one($v915)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v916))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v917', substring(string(xdoxslt:one($v916)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v917', $v916)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S277', xdoxslt:get_variable($_XDOCTX, '$v917'))"/>
   </xsl:template>
   <xsl:template name="L5R16P1S278">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v918" select="string('*')"/>
      <xsl:variable name="v919" select="xdoxslt:convert_case(string(xdoxslt:one($v918)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v919))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v920', substring(string(xdoxslt:one($v919)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v920', $v919)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P1S278', xdoxslt:get_variable($_XDOCTX, '$v920'))"/>
   </xsl:template>
   <xsl:template name="L5R16P3S279">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v921" select="string('*')"/>
      <xsl:variable name="v922" select="xdoxslt:convert_case(string(xdoxslt:one($v921)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v922))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v923', substring(string(xdoxslt:one($v922)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v923', $v922)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R16P3S279', xdoxslt:get_variable($_XDOCTX, '$v923'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_H1_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_H1_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="COND_v924">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: ../../../../LIST_GTM_SHIPMENT_FLAGS/GTM_SHIPMENT_FLAGS/IS_HAZARDOUS='Y' AND LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID NOT IN('SCOULAR/NVO.AMS_CANCEL')-->
      <xsl:variable name="v925" select="xdoxslt:normalize_string($_XDOCTX, (../../../../LIST_GTM_SHIPMENT_FLAGS/GTM_SHIPMENT_FLAGS/IS_HAZARDOUS)[1]) = 'Y'"/>
      <xsl:variable name="v926" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_CANCEL'"/>
      <xsl:variable name="v927" select="not(xdoxslt:one($v926))"/>
      <xsl:variable name="v928" select="xdoxslt:one($v925) and xdoxslt:one($v927)"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COND_v924_V', $v928)"/>
   </xsl:template>
   <xsl:template name="L7R17P3S280">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('H1')),'NONE')-->
      <xsl:variable name="v929" select="string('H1')"/>
      <xsl:variable name="v930" select="xdoxslt:convert_case(string(xdoxslt:one($v929)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v930))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v931', substring(string(xdoxslt:one($v930)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v931', $v930)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P3S280', xdoxslt:get_variable($_XDOCTX, '$v931'))"/>
   </xsl:template>
   <xsl:template name="L7R17P1S281">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v932" select="string('*')"/>
      <xsl:variable name="v933" select="xdoxslt:convert_case(string(xdoxslt:one($v932)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v933))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v934', substring(string(xdoxslt:one($v933)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v934', $v933)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P1S281', xdoxslt:get_variable($_XDOCTX, '$v934'))"/>
   </xsl:template>
   <xsl:template name="L7R17P10S282">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((UN_NUM)),'NONE')-->
      <xsl:variable name="v935" select="string(xdoxslt:normalize_string($_XDOCTX, (.//UN_NUM)[1]))"/>
      <xsl:variable name="v936" select="xdoxslt:convert_case(string(xdoxslt:one($v935)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v936))) > 10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v937', substring(string(xdoxslt:one($v936)), 1, 10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v937', $v936)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P10S282', xdoxslt:get_variable($_XDOCTX, '$v937'))"/>
   </xsl:template>
   <xsl:template name="L7R17P1S283">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v938" select="string('*')"/>
      <xsl:variable name="v939" select="xdoxslt:convert_case(string(xdoxslt:one($v938)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v939))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v940', substring(string(xdoxslt:one($v939)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v940', $v939)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P1S283', xdoxslt:get_variable($_XDOCTX, '$v940'))"/>
   </xsl:template>
   <xsl:template name="L7R17P4S284">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CLASS)),'NONE')-->
      <xsl:variable name="v941" select="string(xdoxslt:normalize_string($_XDOCTX, (.//CLASS)[1]))"/>
      <xsl:variable name="v942" select="xdoxslt:convert_case(string(xdoxslt:one($v941)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v942))) > 4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v943', substring(string(xdoxslt:one($v942)), 1, 4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v943', $v942)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P4S284', xdoxslt:get_variable($_XDOCTX, '$v943'))"/>
   </xsl:template>
   <xsl:template name="L7R17P1S285">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v944" select="string('*')"/>
      <xsl:variable name="v945" select="xdoxslt:convert_case(string(xdoxslt:one($v944)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v945))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v946', substring(string(xdoxslt:one($v945)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v946', $v945)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P1S285', xdoxslt:get_variable($_XDOCTX, '$v946'))"/>
   </xsl:template>
   <xsl:template name="L7R17P1S286">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('U')),'NONE')-->
      <xsl:variable name="v947" select="string('U')"/>
      <xsl:variable name="v948" select="xdoxslt:convert_case(string(xdoxslt:one($v947)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v948))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v949', substring(string(xdoxslt:one($v948)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v949', $v948)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P1S286', xdoxslt:get_variable($_XDOCTX, '$v949'))"/>
   </xsl:template>
   <xsl:template name="L7R17P1S287">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v950" select="string('*')"/>
      <xsl:variable name="v951" select="xdoxslt:convert_case(string(xdoxslt:one($v950)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v951))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v952', substring(string(xdoxslt:one($v951)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v952', $v951)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P1S287', xdoxslt:get_variable($_XDOCTX, '$v952'))"/>
   </xsl:template>
   <xsl:template name="L7R17P30S288">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((PACK_GROUP)),'NONE')-->
      <xsl:variable name="v953" select="string(xdoxslt:normalize_string($_XDOCTX, (.//PACK_GROUP)[1]))"/>
      <xsl:variable name="v954" select="xdoxslt:convert_case(string(xdoxslt:one($v953)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v954))) > 30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v955', substring(string(xdoxslt:one($v954)), 1, 30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v955', $v954)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P30S288', xdoxslt:get_variable($_XDOCTX, '$v955'))"/>
   </xsl:template>
   <xsl:template name="L7R17P1S289">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v956" select="string('*')"/>
      <xsl:variable name="v957" select="xdoxslt:convert_case(string(xdoxslt:one($v956)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v957))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v958', substring(string(xdoxslt:one($v957)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v958', $v957)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P1S289', xdoxslt:get_variable($_XDOCTX, '$v958'))"/>
   </xsl:template>
   <xsl:template name="L7R17P24S290">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CONTACT)),'NONE')-->
      <xsl:variable name="v959" select="string(xdoxslt:normalize_string($_XDOCTX, (.//CONTACT)[1]))"/>
      <xsl:variable name="v960" select="xdoxslt:convert_case(string(xdoxslt:one($v959)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v960))) > 24">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v961', substring(string(xdoxslt:one($v960)), 1, 24))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v961', $v960)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P24S290', xdoxslt:get_variable($_XDOCTX, '$v961'))"/>
   </xsl:template>
   <xsl:template name="L7R17P1S291">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v962" select="string('*')"/>
      <xsl:variable name="v963" select="xdoxslt:convert_case(string(xdoxslt:one($v962)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v963))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v964', substring(string(xdoxslt:one($v963)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v964', $v963)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P1S291', xdoxslt:get_variable($_XDOCTX, '$v964'))"/>
   </xsl:template>
   <xsl:template name="L7R17P6S292">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v965" select="string('*')"/>
      <xsl:variable name="v966" select="xdoxslt:convert_case(string(xdoxslt:one($v965)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v966))) > 6">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v967', substring(string(xdoxslt:one($v966)), 1, 6))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v967', $v966)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P6S292', xdoxslt:get_variable($_XDOCTX, '$v967'))"/>
   </xsl:template>
   <xsl:template name="L7R17P1S293">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v968" select="string('*')"/>
      <xsl:variable name="v969" select="xdoxslt:convert_case(string(xdoxslt:one($v968)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v969))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v970', substring(string(xdoxslt:one($v969)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v970', $v969)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P1S293', xdoxslt:get_variable($_XDOCTX, '$v970'))"/>
   </xsl:template>
   <xsl:template name="L7R17P3S294">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v971" select="string('*')"/>
      <xsl:variable name="v972" select="xdoxslt:convert_case(string(xdoxslt:one($v971)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v972))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v973', substring(string(xdoxslt:one($v972)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v973', $v972)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P3S294', xdoxslt:get_variable($_XDOCTX, '$v973'))"/>
   </xsl:template>
   <xsl:template name="L7R17P1S295">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v974" select="string('*')"/>
      <xsl:variable name="v975" select="xdoxslt:convert_case(string(xdoxslt:one($v974)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v975))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v976', substring(string(xdoxslt:one($v975)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v976', $v975)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P1S295', xdoxslt:get_variable($_XDOCTX, '$v976'))"/>
   </xsl:template>
   <xsl:template name="L7R17P2S296">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v977" select="string('*')"/>
      <xsl:variable name="v978" select="xdoxslt:convert_case(string(xdoxslt:one($v977)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v978))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v979', substring(string(xdoxslt:one($v978)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v979', $v978)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P2S296', xdoxslt:get_variable($_XDOCTX, '$v979'))"/>
   </xsl:template>
   <xsl:template name="L7R17P1S297">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v980" select="string('*')"/>
      <xsl:variable name="v981" select="xdoxslt:convert_case(string(xdoxslt:one($v980)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v981))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v982', substring(string(xdoxslt:one($v981)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v982', $v981)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P1S297', xdoxslt:get_variable($_XDOCTX, '$v982'))"/>
   </xsl:template>
   <xsl:template name="L7R17P3S298">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v983" select="string('*')"/>
      <xsl:variable name="v984" select="xdoxslt:convert_case(string(xdoxslt:one($v983)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v984))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v985', substring(string(xdoxslt:one($v984)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v985', $v984)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R17P3S298', xdoxslt:get_variable($_XDOCTX, '$v985'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_H2_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_H2_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="COND_v986">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: IS_HAZARDOUS_CARGO='T' AND LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID NOT IN('SCOULAR/NVO.AMS_CANCEL')-->
      <xsl:variable name="v987" select="xdoxslt:normalize_string($_XDOCTX, (.//IS_HAZARDOUS_CARGO)[1]) = 'T'"/>
      <xsl:variable name="v988" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_CANCEL'"/>
      <xsl:variable name="v989" select="not(xdoxslt:one($v988))"/>
      <xsl:variable name="v990" select="xdoxslt:one($v987) and xdoxslt:one($v989)"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COND_v986_V', $v990)"/>
   </xsl:template>
   <xsl:template name="L7R18P3S299">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('H2')),'NONE')-->
      <xsl:variable name="v991" select="string('H2')"/>
      <xsl:variable name="v992" select="xdoxslt:convert_case(string(xdoxslt:one($v991)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v992))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v993', substring(string(xdoxslt:one($v992)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v993', $v992)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R18P3S299', xdoxslt:get_variable($_XDOCTX, '$v993'))"/>
   </xsl:template>
   <xsl:template name="L7R18P1S300">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v994" select="string('*')"/>
      <xsl:variable name="v995" select="xdoxslt:convert_case(string(xdoxslt:one($v994)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v995))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v996', substring(string(xdoxslt:one($v995)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v996', $v995)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R18P1S300', xdoxslt:get_variable($_XDOCTX, '$v996'))"/>
   </xsl:template>
   <xsl:template name="L7R18P30S301">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v997" select="string('*')"/>
      <xsl:variable name="v998" select="xdoxslt:convert_case(string(xdoxslt:one($v997)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v998))) > 30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v999', substring(string(xdoxslt:one($v998)), 1, 30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v999', $v998)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R18P30S301', xdoxslt:get_variable($_XDOCTX, '$v999'))"/>
   </xsl:template>
   <xsl:template name="L7R18P1S302">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1000" select="string('*')"/>
      <xsl:variable name="v1001" select="xdoxslt:convert_case(string(xdoxslt:one($v1000)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1001))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1002', substring(string(xdoxslt:one($v1001)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1002', $v1001)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R18P1S302', xdoxslt:get_variable($_XDOCTX, '$v1002'))"/>
   </xsl:template>
   <xsl:template name="L7R18P1S303">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1003" select="string('*')"/>
      <xsl:variable name="v1004" select="xdoxslt:convert_case(string(xdoxslt:one($v1003)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1004))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1005', substring(string(xdoxslt:one($v1004)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1005', $v1004)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L7R18P1S303', xdoxslt:get_variable($_XDOCTX, '$v1005'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_VC_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_VC_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="COND_v1006">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: VIN IS NOT NULL AND LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID NOT IN('SCOULAR/NVO.AMS_CANCEL')-->
      <xsl:variable name="v1007" select="xdoxslt:normalize_string($_XDOCTX, (.//VIN)[1]) != ''"/>
      <xsl:variable name="v1008" select="xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_TRANSACTION_STATUS/GTM_TRANSACTION_STATUS/STATUS_VALUE_GID)[1]) = 'SCOULAR/NVO.AMS_CANCEL'"/>
      <xsl:variable name="v1009" select="not(xdoxslt:one($v1008))"/>
      <xsl:variable name="v1010" select="xdoxslt:one($v1007) and xdoxslt:one($v1009)"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COND_v1006_V', $v1010)"/>
   </xsl:template>
   <xsl:template name="L5R19P3S304">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('VC')),'NONE')-->
      <xsl:variable name="v1011" select="string('VC')"/>
      <xsl:variable name="v1012" select="xdoxslt:convert_case(string(xdoxslt:one($v1011)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1012))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1013', substring(string(xdoxslt:one($v1012)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1013', $v1012)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P3S304', xdoxslt:get_variable($_XDOCTX, '$v1013'))"/>
   </xsl:template>
   <xsl:template name="L5R19P1S305">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1014" select="string('*')"/>
      <xsl:variable name="v1015" select="xdoxslt:convert_case(string(xdoxslt:one($v1014)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1015))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1016', substring(string(xdoxslt:one($v1015)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1016', $v1015)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P1S305', xdoxslt:get_variable($_XDOCTX, '$v1016'))"/>
   </xsl:template>
   <xsl:template name="L5R19P25S306">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((VIN)),'NONE')-->
      <xsl:variable name="v1017" select="string(xdoxslt:normalize_string($_XDOCTX, (.//VIN)[1]))"/>
      <xsl:variable name="v1018" select="xdoxslt:convert_case(string(xdoxslt:one($v1017)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1018))) > 25">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1019', substring(string(xdoxslt:one($v1018)), 1, 25))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1019', $v1018)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P25S306', xdoxslt:get_variable($_XDOCTX, '$v1019'))"/>
   </xsl:template>
   <xsl:template name="L5R19P1S307">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1020" select="string('*')"/>
      <xsl:variable name="v1021" select="xdoxslt:convert_case(string(xdoxslt:one($v1020)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1021))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1022', substring(string(xdoxslt:one($v1021)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1022', $v1021)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P1S307', xdoxslt:get_variable($_XDOCTX, '$v1022'))"/>
   </xsl:template>
   <xsl:template name="L5R19P1S308">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1023" select="string('*')"/>
      <xsl:variable name="v1024" select="xdoxslt:convert_case(string(xdoxslt:one($v1023)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1024))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1025', substring(string(xdoxslt:one($v1024)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1025', $v1024)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P1S308', xdoxslt:get_variable($_XDOCTX, '$v1025'))"/>
   </xsl:template>
   <xsl:template name="L5R19P1S309">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1026" select="string('*')"/>
      <xsl:variable name="v1027" select="xdoxslt:convert_case(string(xdoxslt:one($v1026)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1027))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1028', substring(string(xdoxslt:one($v1027)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1028', $v1027)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P1S309', xdoxslt:get_variable($_XDOCTX, '$v1028'))"/>
   </xsl:template>
   <xsl:template name="L5R19P1S310">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1029" select="string('*')"/>
      <xsl:variable name="v1030" select="xdoxslt:convert_case(string(xdoxslt:one($v1029)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1030))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1031', substring(string(xdoxslt:one($v1030)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1031', $v1030)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P1S310', xdoxslt:get_variable($_XDOCTX, '$v1031'))"/>
   </xsl:template>
   <xsl:template name="L5R19P1S311">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1032" select="string('*')"/>
      <xsl:variable name="v1033" select="xdoxslt:convert_case(string(xdoxslt:one($v1032)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1033))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1034', substring(string(xdoxslt:one($v1033)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1034', $v1033)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P1S311', xdoxslt:get_variable($_XDOCTX, '$v1034'))"/>
   </xsl:template>
   <xsl:template name="L5R19P1S312">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1035" select="string('*')"/>
      <xsl:variable name="v1036" select="xdoxslt:convert_case(string(xdoxslt:one($v1035)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1036))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1037', substring(string(xdoxslt:one($v1036)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1037', $v1036)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P1S312', xdoxslt:get_variable($_XDOCTX, '$v1037'))"/>
   </xsl:template>
   <xsl:template name="L5R19P1S313">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1038" select="string('*')"/>
      <xsl:variable name="v1039" select="xdoxslt:convert_case(string(xdoxslt:one($v1038)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1039))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1040', substring(string(xdoxslt:one($v1039)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1040', $v1039)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P1S313', xdoxslt:get_variable($_XDOCTX, '$v1040'))"/>
   </xsl:template>
   <xsl:template name="L5R19P1S314">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1041" select="string('*')"/>
      <xsl:variable name="v1042" select="xdoxslt:convert_case(string(xdoxslt:one($v1041)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1042))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1043', substring(string(xdoxslt:one($v1042)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1043', $v1042)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P1S314', xdoxslt:get_variable($_XDOCTX, '$v1043'))"/>
   </xsl:template>
   <xsl:template name="L5R19P1S315">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1044" select="string('*')"/>
      <xsl:variable name="v1045" select="xdoxslt:convert_case(string(xdoxslt:one($v1044)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1045))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1046', substring(string(xdoxslt:one($v1045)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1046', $v1045)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P1S315', xdoxslt:get_variable($_XDOCTX, '$v1046'))"/>
   </xsl:template>
   <xsl:template name="L5R19P1S316">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1047" select="string('*')"/>
      <xsl:variable name="v1048" select="xdoxslt:convert_case(string(xdoxslt:one($v1047)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1048))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1049', substring(string(xdoxslt:one($v1048)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1049', $v1048)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P1S316', xdoxslt:get_variable($_XDOCTX, '$v1049'))"/>
   </xsl:template>
   <xsl:template name="L5R19P1S317">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1050" select="string('*')"/>
      <xsl:variable name="v1051" select="xdoxslt:convert_case(string(xdoxslt:one($v1050)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1051))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1052', substring(string(xdoxslt:one($v1051)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1052', $v1051)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L5R19P1S317', xdoxslt:get_variable($_XDOCTX, '$v1052'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_SE_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_SE_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R20P2S318">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('SE')),'NONE')-->
      <xsl:variable name="v1053" select="string('SE')"/>
      <xsl:variable name="v1054" select="xdoxslt:convert_case(string(xdoxslt:one($v1053)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1054))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1055', substring(string(xdoxslt:one($v1054)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1055', $v1054)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R20P2S318', xdoxslt:get_variable($_XDOCTX, '$v1055'))"/>
   </xsl:template>
   <xsl:template name="L1R20P1S319">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1056" select="string('*')"/>
      <xsl:variable name="v1057" select="xdoxslt:convert_case(string(xdoxslt:one($v1056)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1057))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1058', substring(string(xdoxslt:one($v1057)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1058', $v1057)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R20P1S319', xdoxslt:get_variable($_XDOCTX, '$v1058'))"/>
   </xsl:template>
   <xsl:template name="L1R20P10S320">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((SEQUENCE_NUMBER(STSESequence) + 1))-->
      <xsl:variable name="v1059" select="xdoxslt:sequence_number($_XDOCTX, 'STSESequence')"/>
      <xsl:variable name="v1060" select="number(xdoxslt:one($v1059)) + number(1)"/>
      <xsl:variable name="v1061" select="xdoxslt:to_number(xdoxslt:one($v1060))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1061))) > 10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1062', substring(string(xdoxslt:one($v1061)), 1, 10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1062', $v1061)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R20P10S320', xdoxslt:get_variable($_XDOCTX, '$v1062'))"/>
   </xsl:template>
   <xsl:template name="L1R20P1S321">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1063" select="string('*')"/>
      <xsl:variable name="v1064" select="xdoxslt:convert_case(string(xdoxslt:one($v1063)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1064))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1065', substring(string(xdoxslt:one($v1064)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1065', $v1064)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R20P1S321', xdoxslt:get_variable($_XDOCTX, '$v1065'))"/>
   </xsl:template>
   <xsl:template name="L1R20P9S322">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_SHIPMENT/GTM_SHIPMENT/LIST_OTM_CONTROL/OTM_CONTROL/TRANNUM)),'NONE')-->
      <xsl:variable name="v1066" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_SHIPMENT/GTM_SHIPMENT/LIST_OTM_CONTROL/OTM_CONTROL/TRANNUM)[1]))"/>
      <xsl:variable name="v1067" select="xdoxslt:convert_case(string(xdoxslt:one($v1066)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1067))) > 9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1068', substring(string(xdoxslt:one($v1067)), 1, 9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1068', $v1067)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R20P9S322', xdoxslt:get_variable($_XDOCTX, '$v1068'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_GE_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_GE_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R21P2S323">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('GE')),'NONE')-->
      <xsl:variable name="v1069" select="string('GE')"/>
      <xsl:variable name="v1070" select="xdoxslt:convert_case(string(xdoxslt:one($v1069)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1070))) > 2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1071', substring(string(xdoxslt:one($v1070)), 1, 2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1071', $v1070)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R21P2S323', xdoxslt:get_variable($_XDOCTX, '$v1071'))"/>
   </xsl:template>
   <xsl:template name="L1R21P1S324">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1072" select="string('*')"/>
      <xsl:variable name="v1073" select="xdoxslt:convert_case(string(xdoxslt:one($v1072)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1073))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1074', substring(string(xdoxslt:one($v1073)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1074', $v1073)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R21P1S324', xdoxslt:get_variable($_XDOCTX, '$v1074'))"/>
   </xsl:template>
   <xsl:template name="L1R21P6S325">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER(('1'))-->
      <xsl:variable name="v1075" select="xdoxslt:to_number('1')"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1075))) > 6">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1076', substring(string(xdoxslt:one($v1075)), 1, 6))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1076', $v1075)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R21P6S325', xdoxslt:get_variable($_XDOCTX, '$v1076'))"/>
   </xsl:template>
   <xsl:template name="L1R21P1S326">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1077" select="string('*')"/>
      <xsl:variable name="v1078" select="xdoxslt:convert_case(string(xdoxslt:one($v1077)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1078))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1079', substring(string(xdoxslt:one($v1078)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1079', $v1078)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R21P1S326', xdoxslt:get_variable($_XDOCTX, '$v1079'))"/>
   </xsl:template>
   <xsl:template name="L1R21P9S327">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LIST_GTM_SHIPMENT/GTM_SHIPMENT/LIST_OTM_CONTROL/OTM_CONTROL/INTNUM)),'NONE')-->
      <xsl:variable name="v1080" select="string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_SHIPMENT/GTM_SHIPMENT/LIST_OTM_CONTROL/OTM_CONTROL/INTNUM)[1]))"/>
      <xsl:variable name="v1081" select="xdoxslt:convert_case(string(xdoxslt:one($v1080)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1081))) > 9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1082', substring(string(xdoxslt:one($v1081)), 1, 9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1082', $v1081)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R21P9S327', xdoxslt:get_variable($_XDOCTX, '$v1082'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_IEA_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_IEA_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R22P3S328">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('IEA')),'NONE')-->
      <xsl:variable name="v1083" select="string('IEA')"/>
      <xsl:variable name="v1084" select="xdoxslt:convert_case(string(xdoxslt:one($v1083)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1084))) > 3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1085', substring(string(xdoxslt:one($v1084)), 1, 3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1085', $v1084)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R22P3S328', xdoxslt:get_variable($_XDOCTX, '$v1085'))"/>
   </xsl:template>
   <xsl:template name="L1R22P1S329">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1086" select="string('*')"/>
      <xsl:variable name="v1087" select="xdoxslt:convert_case(string(xdoxslt:one($v1086)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1087))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1088', substring(string(xdoxslt:one($v1087)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1088', $v1087)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R22P1S329', xdoxslt:get_variable($_XDOCTX, '$v1088'))"/>
   </xsl:template>
   <xsl:template name="L1R22P5S330">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER(('1'))-->
      <xsl:variable name="v1089" select="xdoxslt:to_number('1')"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1089))) > 5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1090', substring(string(xdoxslt:one($v1089)), 1, 5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1090', $v1089)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R22P5S330', xdoxslt:get_variable($_XDOCTX, '$v1090'))"/>
   </xsl:template>
   <xsl:template name="L1R22P1S331">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('*')),'NONE')-->
      <xsl:variable name="v1091" select="string('*')"/>
      <xsl:variable name="v1092" select="xdoxslt:convert_case(string(xdoxslt:one($v1091)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1092))) > 1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1093', substring(string(xdoxslt:one($v1092)), 1, 1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1093', $v1092)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R22P1S331', xdoxslt:get_variable($_XDOCTX, '$v1093'))"/>
   </xsl:template>
   <xsl:template name="L1R22P9S332">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((LPAD(LIST_GTM_SHIPMENT/GTM_SHIPMENT/LIST_OTM_CONTROL/OTM_CONTROL/INTNUM,9,'0'))),'NONE')-->
      <xsl:variable name="v1094" select="xdoxslt:lpad(string(xdoxslt:normalize_string($_XDOCTX, (LIST_GTM_SHIPMENT/GTM_SHIPMENT/LIST_OTM_CONTROL/OTM_CONTROL/INTNUM)[1])), number(9), string('0'))"/>
      <xsl:variable name="v1095" select="string(xdoxslt:one($v1094))"/>
      <xsl:variable name="v1096" select="xdoxslt:convert_case(string(xdoxslt:one($v1095)), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string(xdoxslt:one($v1096))) > 9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1097', substring(string(xdoxslt:one($v1096)), 1, 9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, '$v1097', $v1096)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R22P9S332', xdoxslt:get_variable($_XDOCTX, '$v1097'))"/>
   </xsl:template>
   <xsl:template name="_RECORDBREAK">
      <!--Record Break-->
      <xsl:variable name="RECORDBREAK" select="concat(xdoxslt:chr(13), xdoxslt:chr(10))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'RECORD_BREAK_LENGTH', string-length(xdoxslt:one($RECORDBREAK)))"/>
      <xsl:value-of select="string(xdoxslt:one($RECORDBREAK))"/>
   </xsl:template>
   <xsl:template name="_BLOCK_FILLER">
      <!--Block Filler-->
      <xsl:param name="BLOCK_BEGIN"/>
      <xsl:param name="BLOCK_END"/>
      <xsl:param name="BLOCK_SPAN"/>
      <xsl:param name="BLOCK_FILL_CHAR"/>
      <xsl:param name="BLOCK_RECORD_LENGTH"/>
      <xsl:param name="RECORD_BREAK_LENGTH"/>
      <xsl:param name="BLOCK_RECORD_COUNTER"/>
      <xsl:if test="number(string-length(xdoxslt:one($BLOCK_END)) - string-length(xdoxslt:one($BLOCK_BEGIN)) - number(xdoxslt:one($BLOCK_RECORD_COUNTER)) * number(xdoxslt:one($RECORD_BREAK_LENGTH))) mod (number(xdoxslt:one($BLOCK_SPAN)) * number(xdoxslt:one($BLOCK_RECORD_LENGTH))) > 0">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGE', xdoxslt:fill_block(xdoxslt:one($BLOCK_END), xdoxslt:one($BLOCK_FILL_CHAR), xdoxslt:one($BLOCK_RECORD_LENGTH)))"/>
         <xsl:call-template name="_RECORDBREAK"/>
         <xsl:call-template name="_BLOCK_FILLER">
            <xsl:with-param name="BLOCK_BEGIN" select="string($BLOCK_BEGIN)"/>
            <xsl:with-param name="BLOCK_END" select="string(xdoxslt:get_variable($_XDOCTX, 'MESSAGE'))"/>
            <xsl:with-param name="BLOCK_SPAN" select="$BLOCK_SPAN"/>
            <xsl:with-param name="BLOCK_FILL_CHAR" select="$BLOCK_FILL_CHAR"/>
            <xsl:with-param name="BLOCK_RECORD_LENGTH" select="$BLOCK_RECORD_LENGTH"/>
            <xsl:with-param name="RECORD_BREAK_LENGTH" select="$RECORD_BREAK_LENGTH"/>
            <xsl:with-param name="BLOCK_RECORD_COUNTER" select="number($BLOCK_RECORD_COUNTER) + number(1)"/>
         </xsl:call-template>
      </xsl:if>
   </xsl:template>
</xsl:stylesheet>
